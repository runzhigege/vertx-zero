// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zero.enum.proto

package io.vertx.tp.ipc.eon.em;

/**
 * <pre>
 * Compress Algorithm
 * </pre>
 * <p>
 * Protobuf enum {@code io.vertx.tp.ipc.eon.em.Compression}
 */
public enum Compression
        implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No compression
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <pre>
     * Gzip compression
     * </pre>
     *
     * <code>GZIP = 1;</code>
     */
    GZIP(1),
    /**
     * <pre>
     * Deflate compression
     * </pre>
     *
     * <code>DEFLATE = 2;</code>
     */
    DEFLATE(2),
    UNRECOGNIZED(-1),;

    /**
     * <pre>
     * No compression
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <pre>
     * Gzip compression
     * </pre>
     *
     * <code>GZIP = 1;</code>
     */
    public static final int GZIP_VALUE = 1;
    /**
     * <pre>
     * Deflate compression
     * </pre>
     *
     * <code>DEFLATE = 2;</code>
     */
    public static final int DEFLATE_VALUE = 2;
    private static final com.google.protobuf.Internal.EnumLiteMap<
            Compression> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Compression>() {
                @Override
                public Compression findValueByNumber(final int number) {
                    return Compression.forNumber(number);
                }
            };
    private static final Compression[] VALUES = values();
    private final int value;

    private Compression(final int value) {
        this.value = value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Compression valueOf(final int value) {
        return forNumber(value);
    }

    public static Compression forNumber(final int value) {
        switch (value) {
            case 0:
                return NONE;
            case 1:
                return GZIP;
            case 2:
                return DEFLATE;
            default:
                return null;
        }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Compression>
    internalGetValueMap() {
        return internalValueMap;
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
        return io.vertx.tp.ipc.eon.em.UpEnum.getDescriptor().getEnumTypes().get(0);
    }

    public static Compression valueOf(
            final com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
                    "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
    }

    @Override
    public final int getNumber() {
        if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                    "Can't getNull the number of an unknown enum value.");
        }
        return this.value;
    }

    @Override
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
        return getDescriptor().getValues().get(this.ordinal());
    }

    @Override
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
        return getDescriptor();
    }

    // @@protoc_insertion_point(enum_scope:io.vertx.tp.ipc.eon.em.Compression)
}

