/*
 * This file is generated by jOOQ.
*/
package com.htl.domain.tables;


import com.htl.domain.DbHtl;
import com.htl.domain.Indexes;
import com.htl.domain.Keys;
import com.htl.domain.tables.records.SysAppRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysApp extends TableImpl<SysAppRecord> {

    private static final long serialVersionUID = 1107553878;

    /**
     * The reference instance of <code>DB_HTL.SYS_APP</code>
     */
    public static final SysApp SYS_APP = new SysApp();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysAppRecord> getRecordType() {
        return SysAppRecord.class;
    }

    /**
     * The column <code>DB_HTL.SYS_APP.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<SysAppRecord, String> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");

    /**
     * The column <code>DB_HTL.SYS_APP.T_COMMENTS</code>. comments,T_COMMENTS
     */
    public final TableField<SysAppRecord, String> T_COMMENTS = createField("T_COMMENTS", org.jooq.impl.SQLDataType.CLOB, this, "comments,T_COMMENTS");

    /**
     * The column <code>DB_HTL.SYS_APP.V_ESERVER_ID</code>. email = true时，关联Email Server的ID（软关联）,emailServer,V_ESERVER_ID
     */
    public final TableField<SysAppRecord, String> V_ESERVER_ID = createField("V_ESERVER_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "email = true时，关联Email Server的ID（软关联）,emailServer,V_ESERVER_ID");

    /**
     * The column <code>DB_HTL.SYS_APP.S_NAME</code>. name,S_NAME
     */
    public final TableField<SysAppRecord, String> S_NAME = createField("S_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "name,S_NAME");

    /**
     * The column <code>DB_HTL.SYS_APP.S_CODE</code>. code,S_CODE
     */
    public final TableField<SysAppRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");

    /**
     * The column <code>DB_HTL.SYS_APP.S_AUTH</code>. OAuth对应的模式secret,auth,S_AUTH
     */
    public final TableField<SysAppRecord, String> S_AUTH = createField("S_AUTH", org.jooq.impl.SQLDataType.VARCHAR(20), this, "OAuth对应的模式secret,auth,S_AUTH");

    /**
     * The column <code>DB_HTL.SYS_APP.S_BACK_UP</code>. 备份地址，打包备份整个应用配置文件的服务端地址,backup,S_BACK_UP
     */
    public final TableField<SysAppRecord, String> S_BACK_UP = createField("S_BACK_UP", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "备份地址，打包备份整个应用配置文件的服务端地址,backup,S_BACK_UP");

    /**
     * The column <code>DB_HTL.SYS_APP.S_CONTACT</code>. 拥有者联系方式,contact,S_CONTACT
     */
    public final TableField<SysAppRecord, String> S_CONTACT = createField("S_CONTACT", org.jooq.impl.SQLDataType.VARCHAR(384).nullable(false), this, "拥有者联系方式,contact,S_CONTACT");

    /**
     * The column <code>DB_HTL.SYS_APP.S_CURRENCY</code>. 货币单位,currency,S_CURRENCY
     */
    public final TableField<SysAppRecord, String> S_CURRENCY = createField("S_CURRENCY", org.jooq.impl.SQLDataType.VARCHAR(10), this, "货币单位,currency,S_CURRENCY");

    /**
     * The column <code>DB_HTL.SYS_APP.S_DATE_FORMAT</code>. 全局时间格式,dateFormat,S_DATE_FORMAT
     */
    public final TableField<SysAppRecord, String> S_DATE_FORMAT = createField("S_DATE_FORMAT", org.jooq.impl.SQLDataType.VARCHAR(64), this, "全局时间格式,dateFormat,S_DATE_FORMAT");

    /**
     * The column <code>DB_HTL.SYS_APP.S_ENCODING</code>. 编码方式,encoding,S_ENCODING
     */
    public final TableField<SysAppRecord, String> S_ENCODING = createField("S_ENCODING", org.jooq.impl.SQLDataType.VARCHAR(24), this, "编码方式,encoding,S_ENCODING");

    /**
     * The column <code>DB_HTL.SYS_APP.S_ICP</code>. ICP备案号,icp,S_ICP
     */
    public final TableField<SysAppRecord, String> S_ICP = createField("S_ICP", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "ICP备案号,icp,S_ICP");

    /**
     * The column <code>DB_HTL.SYS_APP.S_LOGO</code>. 程序Logo,logo,S_LOGO
     */
    public final TableField<SysAppRecord, String> S_LOGO = createField("S_LOGO", org.jooq.impl.SQLDataType.VARCHAR(512), this, "程序Logo,logo,S_LOGO");

    /**
     * The column <code>DB_HTL.SYS_APP.S_OWNER</code>. 拥有者,owner,S_OWNER
     */
    public final TableField<SysAppRecord, String> S_OWNER = createField("S_OWNER", org.jooq.impl.SQLDataType.VARCHAR(128), this, "拥有者,owner,S_OWNER");

    /**
     * The column <code>DB_HTL.SYS_APP.S_PATH</code>. 路径，对应React-Router中的app参数,path,S_PATH
     */
    public final TableField<SysAppRecord, String> S_PATH = createField("S_PATH", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "路径，对应React-Router中的app参数,path,S_PATH");

    /**
     * The column <code>DB_HTL.SYS_APP.S_RENEWAL</code>. 应用更新码，随机16位字符串,renewal,S_RENEWAL
     */
    public final TableField<SysAppRecord, String> S_RENEWAL = createField("S_RENEWAL", org.jooq.impl.SQLDataType.VARCHAR(16), this, "应用更新码，随机16位字符串,renewal,S_RENEWAL");

    /**
     * The column <code>DB_HTL.SYS_APP.S_TITLE</code>. 主标题,title,S_TITLE
     */
    public final TableField<SysAppRecord, String> S_TITLE = createField("S_TITLE", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "主标题,title,S_TITLE");

    /**
     * The column <code>DB_HTL.SYS_APP.S_TYPE</code>. 类别,type,S_TYPE
     */
    public final TableField<SysAppRecord, String> S_TYPE = createField("S_TYPE", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "类别,type,S_TYPE");

    /**
     * The column <code>DB_HTL.SYS_APP.S_VERSION</code>. 版本信息,version,S_VERSION
     */
    public final TableField<SysAppRecord, String> S_VERSION = createField("S_VERSION", org.jooq.impl.SQLDataType.VARCHAR(20), this, "版本信息,version,S_VERSION");

    /**
     * The column <code>DB_HTL.SYS_APP.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<SysAppRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");

    /**
     * The column <code>DB_HTL.SYS_APP.I_ATTACH_SIZE</code>. 附件尺寸,attachSize,I_ATTACH_SIZE
     */
    public final TableField<SysAppRecord, Integer> I_ATTACH_SIZE = createField("I_ATTACH_SIZE", org.jooq.impl.SQLDataType.INTEGER, this, "附件尺寸,attachSize,I_ATTACH_SIZE");

    /**
     * The column <code>DB_HTL.SYS_APP.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<SysAppRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");

    /**
     * The column <code>DB_HTL.SYS_APP.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<SysAppRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");

    /**
     * The column <code>DB_HTL.SYS_APP.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<SysAppRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");

    /**
     * The column <code>DB_HTL.SYS_APP.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<SysAppRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");

    /**
     * The column <code>DB_HTL.SYS_APP.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<SysAppRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");

    /**
     * The column <code>DB_HTL.SYS_APP.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<SysAppRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");

    /**
     * The column <code>DB_HTL.SYS_APP.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<SysAppRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.SYS_APP</code> table reference
     */
    public SysApp() {
        this(DSL.name("SYS_APP"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.SYS_APP</code> table reference
     */
    public SysApp(String alias) {
        this(DSL.name(alias), SYS_APP);
    }

    /**
     * Create an aliased <code>DB_HTL.SYS_APP</code> table reference
     */
    public SysApp(Name alias) {
        this(alias, SYS_APP);
    }

    private SysApp(Name alias, Table<SysAppRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysApp(Name alias, Table<SysAppRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_APP_PRIMARY, Indexes.SYS_APP_UK_SYS_APP_S_CODE_Z_SIGMA, Indexes.SYS_APP_UK_SYS_APP_S_NAME_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysAppRecord> getPrimaryKey() {
        return Keys.KEY_SYS_APP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysAppRecord>> getKeys() {
        return Arrays.<UniqueKey<SysAppRecord>>asList(Keys.KEY_SYS_APP_PRIMARY, Keys.KEY_SYS_APP_UK_SYS_APP_S_NAME_Z_SIGMA, Keys.KEY_SYS_APP_UK_SYS_APP_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysApp as(String alias) {
        return new SysApp(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysApp as(Name alias) {
        return new SysApp(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysApp rename(String name) {
        return new SysApp(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysApp rename(Name name) {
        return new SysApp(name, null);
    }
}
