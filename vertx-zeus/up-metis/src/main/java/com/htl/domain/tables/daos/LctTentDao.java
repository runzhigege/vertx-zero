/*
 * This file is generated by jOOQ.
*/
package com.htl.domain.tables.daos;


import com.htl.domain.tables.LctTent;
import com.htl.domain.tables.records.LctTentRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LctTentDao extends DAOImpl<LctTentRecord, com.htl.domain.tables.pojos.LctTent, String> implements VertxDAO<com.htl.domain.tables.records.LctTentRecord,com.htl.domain.tables.pojos.LctTent,java.lang.String> {

    /**
     * Create a new LctTentDao without any configuration
     */
    public LctTentDao() {
        super(LctTent.LCT_TENT, com.htl.domain.tables.pojos.LctTent.class);
    }

    /**
     * Create a new LctTentDao with an attached configuration
     */
    public LctTentDao(Configuration configuration) {
        super(LctTent.LCT_TENT, com.htl.domain.tables.pojos.LctTent.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(com.htl.domain.tables.pojos.LctTent object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchByPkId(String... values) {
        return fetch(LctTent.LCT_TENT.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public com.htl.domain.tables.pojos.LctTent fetchOneByPkId(String value) {
        return fetchOne(LctTent.LCT_TENT.PK_ID, value);
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchBySName(String... values) {
        return fetch(LctTent.LCT_TENT.S_NAME, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchBySCode(String... values) {
        return fetch(LctTent.LCT_TENT.S_CODE, values);
    }

    /**
     * Fetch records that have <code>S_CONTACT IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchBySContact(String... values) {
        return fetch(LctTent.LCT_TENT.S_CONTACT, values);
    }

    /**
     * Fetch records that have <code>S_MANAGER IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchBySManager(String... values) {
        return fetch(LctTent.LCT_TENT.S_MANAGER, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchByJConfig(String... values) {
        return fetch(LctTent.LCT_TENT.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>I_ORDER IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchByIOrder(Integer... values) {
        return fetch(LctTent.LCT_TENT.I_ORDER, values);
    }

    /**
     * Fetch records that have <code>R_LOCATION_ID IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchByRLocationId(String... values) {
        return fetch(LctTent.LCT_TENT.R_LOCATION_ID, values);
    }

    /**
     * Fetch records that have <code>R_YARD_ID IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchByRYardId(String... values) {
        return fetch(LctTent.LCT_TENT.R_YARD_ID, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchByIsActive(Boolean... values) {
        return fetch(LctTent.LCT_TENT.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchByZSigma(String... values) {
        return fetch(LctTent.LCT_TENT.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchByZLanguage(String... values) {
        return fetch(LctTent.LCT_TENT.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchByZCreateBy(String... values) {
        return fetch(LctTent.LCT_TENT.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(LctTent.LCT_TENT.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchByZUpdateBy(String... values) {
        return fetch(LctTent.LCT_TENT.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctTent> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(LctTent.LCT_TENT.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchByPkIdAsync(List<String> values) {
        return fetchAsync(LctTent.LCT_TENT.PK_ID,values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<com.htl.domain.tables.pojos.LctTent> fetchOneByPkIdAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByPkId(value)),vertx());
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchBySNameAsync(List<String> values) {
        return fetchAsync(LctTent.LCT_TENT.S_NAME,values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(LctTent.LCT_TENT.S_CODE,values);
    }

    /**
     * Fetch records that have <code>S_CONTACT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchBySContactAsync(List<String> values) {
        return fetchAsync(LctTent.LCT_TENT.S_CONTACT,values);
    }

    /**
     * Fetch records that have <code>S_MANAGER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchBySManagerAsync(List<String> values) {
        return fetchAsync(LctTent.LCT_TENT.S_MANAGER,values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(LctTent.LCT_TENT.J_CONFIG,values);
    }

    /**
     * Fetch records that have <code>I_ORDER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchByIOrderAsync(List<Integer> values) {
        return fetchAsync(LctTent.LCT_TENT.I_ORDER,values);
    }

    /**
     * Fetch records that have <code>R_LOCATION_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchByRLocationIdAsync(List<String> values) {
        return fetchAsync(LctTent.LCT_TENT.R_LOCATION_ID,values);
    }

    /**
     * Fetch records that have <code>R_YARD_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchByRYardIdAsync(List<String> values) {
        return fetchAsync(LctTent.LCT_TENT.R_YARD_ID,values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(LctTent.LCT_TENT.IS_ACTIVE,values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(LctTent.LCT_TENT.Z_SIGMA,values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(LctTent.LCT_TENT.Z_LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(LctTent.LCT_TENT.Z_CREATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(LctTent.LCT_TENT.Z_CREATE_TIME,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(LctTent.LCT_TENT.Z_UPDATE_BY,values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctTent>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(LctTent.LCT_TENT.Z_UPDATE_TIME,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
