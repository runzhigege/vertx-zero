/*
 * This file is generated by jOOQ.
*/
package com.htl.domain.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ISysNumber extends Serializable {

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.PK_ID</code>. uniqueId,PK_ID
     */
    public ISysNumber setPkId(String value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.PK_ID</code>. uniqueId,PK_ID
     */
    public String getPkId();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.L_CURRENT</code>. 编号当前值，对应${seed}，每次变化时current提取后更新为：current + step或current - step,current,L_CURRENT
     */
    public ISysNumber setLCurrent(Long value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.L_CURRENT</code>. 编号当前值，对应${seed}，每次变化时current提取后更新为：current + step或current - step,current,L_CURRENT
     */
    public Long getLCurrent();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.S_CODE</code>. code,S_CODE
     */
    public ISysNumber setSCode(String value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.S_COMMENT</code>. 编号备注信息，用于描述编号数据,comment,S_COMMENT
     */
    public ISysNumber setSComment(String value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.S_COMMENT</code>. 编号备注信息，用于描述编号数据,comment,S_COMMENT
     */
    public String getSComment();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.S_FORMAT</code>. 格式信息，用于处理最终格式：,format,S_FORMAT
     */
    public ISysNumber setSFormat(String value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.S_FORMAT</code>. 格式信息，用于处理最终格式：,format,S_FORMAT
     */
    public String getSFormat();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.S_IDENTIFIER</code>. 编号对应的identifier，用于查询当前identifier使用的序号信息,identifier,S_IDENTIFIER
     */
    public ISysNumber setSIdentifier(String value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.S_IDENTIFIER</code>. 编号对应的identifier，用于查询当前identifier使用的序号信息,identifier,S_IDENTIFIER
     */
    public String getSIdentifier();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.S_PREFIX</code>. 编号前缀,prefix,S_PREFIX
     */
    public ISysNumber setSPrefix(String value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.S_PREFIX</code>. 编号前缀,prefix,S_PREFIX
     */
    public String getSPrefix();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.S_SUFFIX</code>. 编号后缀,suffix,S_SUFFIX
     */
    public ISysNumber setSSuffix(String value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.S_SUFFIX</code>. 编号后缀,suffix,S_SUFFIX
     */
    public String getSSuffix();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.S_TIME</code>. 时间对应Pattern，对应${time}：YYYY-MM-DD HH:mm:ss用于描述时间格式生成序号时间部分,time,S_TIME
     */
    public ISysNumber setSTime(String value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.S_TIME</code>. 时间对应Pattern，对应${time}：YYYY-MM-DD HH:mm:ss用于描述时间格式生成序号时间部分,time,S_TIME
     */
    public String getSTime();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.J_CONFIG</code>. config,J_CONFIG
     */
    public ISysNumber setJConfig(String value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.J_CONFIG</code>. config,J_CONFIG
     */
    public String getJConfig();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.I_LENGTH</code>. 编号长度，编号长度不包含prefix和suffix部分,length,I_LENGTH
     */
    public ISysNumber setILength(Integer value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.I_LENGTH</code>. 编号长度，编号长度不包含prefix和suffix部分,length,I_LENGTH
     */
    public Integer getILength();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.I_STEP</code>. 编号的步进系数，每次按照step进行变化,step,I_STEP
     */
    public ISysNumber setIStep(Integer value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.I_STEP</code>. 编号的步进系数，每次按照step进行变化,step,I_STEP
     */
    public Integer getIStep();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.IS_DECREMENT</code>. 递增/递减？如果为true则递减，为false则是递增,decrement,IS_DECREMENT
     */
    public ISysNumber setIsDecrement(Boolean value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.IS_DECREMENT</code>. 递增/递减？如果为true则递减，为false则是递增,decrement,IS_DECREMENT
     */
    public Boolean getIsDecrement();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public ISysNumber setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public ISysNumber setZSigma(String value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public String getZSigma();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public ISysNumber setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public ISysNumber setZCreateBy(String value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public String getZCreateBy();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public ISysNumber setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public ISysNumber setZUpdateBy(String value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public String getZUpdateBy();

    /**
     * Setter for <code>DB_HTL.SYS_NUMBER.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public ISysNumber setZUpdateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.SYS_NUMBER.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public LocalDateTime getZUpdateTime();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ISysNumber
     */
    public void from(com.htl.domain.tables.interfaces.ISysNumber from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ISysNumber
     */
    public <E extends com.htl.domain.tables.interfaces.ISysNumber> E into(E into);

    default ISysNumber fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getString("PK_ID"));
        setLCurrent(json.getLong("L_CURRENT"));
        setSCode(json.getString("S_CODE"));
        setSComment(json.getString("S_COMMENT"));
        setSFormat(json.getString("S_FORMAT"));
        setSIdentifier(json.getString("S_IDENTIFIER"));
        setSPrefix(json.getString("S_PREFIX"));
        setSSuffix(json.getString("S_SUFFIX"));
        setSTime(json.getString("S_TIME"));
        setJConfig(json.getString("J_CONFIG"));
        setILength(json.getInteger("I_LENGTH"));
        setIStep(json.getInteger("I_STEP"));
        setIsDecrement(json.getBoolean("IS_DECREMENT"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setZSigma(json.getString("Z_SIGMA"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        setZCreateBy(json.getString("Z_CREATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        setZUpdateBy(json.getString("Z_UPDATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        json.put("L_CURRENT",getLCurrent());
        json.put("S_CODE",getSCode());
        json.put("S_COMMENT",getSComment());
        json.put("S_FORMAT",getSFormat());
        json.put("S_IDENTIFIER",getSIdentifier());
        json.put("S_PREFIX",getSPrefix());
        json.put("S_SUFFIX",getSSuffix());
        json.put("S_TIME",getSTime());
        json.put("J_CONFIG",getJConfig());
        json.put("I_LENGTH",getILength());
        json.put("I_STEP",getIStep());
        json.put("IS_DECREMENT",getIsDecrement());
        json.put("IS_ACTIVE",getIsActive());
        json.put("Z_SIGMA",getZSigma());
        json.put("Z_LANGUAGE",getZLanguage());
        json.put("Z_CREATE_BY",getZCreateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        json.put("Z_UPDATE_BY",getZUpdateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return json;
    }

}
