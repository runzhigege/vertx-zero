/*
 * This file is generated by jOOQ.
*/
package com.htl.domain.tables.records;


import com.htl.domain.tables.SysApp;
import com.htl.domain.tables.interfaces.ISysApp;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysAppRecord extends UpdatableRecordImpl<SysAppRecord> implements ISysApp {

    private static final long serialVersionUID = -228077687;

    /**
     * Setter for <code>DB_HTL.SYS_APP.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public SysAppRecord setPkId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.T_COMMENTS</code>. comments,T_COMMENTS
     */
    @Override
    public SysAppRecord setTComments(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.T_COMMENTS</code>. comments,T_COMMENTS
     */
    @Override
    public String getTComments() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.V_ESERVER_ID</code>. email = true时，关联Email Server的ID（软关联）,emailServer,V_ESERVER_ID
     */
    @Override
    public SysAppRecord setVEserverId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.V_ESERVER_ID</code>. email = true时，关联Email Server的ID（软关联）,emailServer,V_ESERVER_ID
     */
    @Override
    public String getVEserverId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_NAME</code>. name,S_NAME
     */
    @Override
    public SysAppRecord setSName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_NAME</code>. name,S_NAME
     */
    @Override
    public String getSName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_CODE</code>. code,S_CODE
     */
    @Override
    public SysAppRecord setSCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_AUTH</code>. OAuth对应的模式secret,auth,S_AUTH
     */
    @Override
    public SysAppRecord setSAuth(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_AUTH</code>. OAuth对应的模式secret,auth,S_AUTH
     */
    @Override
    public String getSAuth() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_BACK_UP</code>. 备份地址，打包备份整个应用配置文件的服务端地址,backup,S_BACK_UP
     */
    @Override
    public SysAppRecord setSBackUp(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_BACK_UP</code>. 备份地址，打包备份整个应用配置文件的服务端地址,backup,S_BACK_UP
     */
    @Override
    public String getSBackUp() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_CONTACT</code>. 拥有者联系方式,contact,S_CONTACT
     */
    @Override
    public SysAppRecord setSContact(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_CONTACT</code>. 拥有者联系方式,contact,S_CONTACT
     */
    @Override
    public String getSContact() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_CURRENCY</code>. 货币单位,currency,S_CURRENCY
     */
    @Override
    public SysAppRecord setSCurrency(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_CURRENCY</code>. 货币单位,currency,S_CURRENCY
     */
    @Override
    public String getSCurrency() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_DATE_FORMAT</code>. 全局时间格式,dateFormat,S_DATE_FORMAT
     */
    @Override
    public SysAppRecord setSDateFormat(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_DATE_FORMAT</code>. 全局时间格式,dateFormat,S_DATE_FORMAT
     */
    @Override
    public String getSDateFormat() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_ENCODING</code>. 编码方式,encoding,S_ENCODING
     */
    @Override
    public SysAppRecord setSEncoding(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_ENCODING</code>. 编码方式,encoding,S_ENCODING
     */
    @Override
    public String getSEncoding() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_ICP</code>. ICP备案号,icp,S_ICP
     */
    @Override
    public SysAppRecord setSIcp(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_ICP</code>. ICP备案号,icp,S_ICP
     */
    @Override
    public String getSIcp() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_LOGO</code>. 程序Logo,logo,S_LOGO
     */
    @Override
    public SysAppRecord setSLogo(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_LOGO</code>. 程序Logo,logo,S_LOGO
     */
    @Override
    public String getSLogo() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_OWNER</code>. 拥有者,owner,S_OWNER
     */
    @Override
    public SysAppRecord setSOwner(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_OWNER</code>. 拥有者,owner,S_OWNER
     */
    @Override
    public String getSOwner() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_PATH</code>. 路径，对应React-Router中的app参数,path,S_PATH
     */
    @Override
    public SysAppRecord setSPath(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_PATH</code>. 路径，对应React-Router中的app参数,path,S_PATH
     */
    @Override
    public String getSPath() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_RENEWAL</code>. 应用更新码，随机16位字符串,renewal,S_RENEWAL
     */
    @Override
    public SysAppRecord setSRenewal(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_RENEWAL</code>. 应用更新码，随机16位字符串,renewal,S_RENEWAL
     */
    @Override
    public String getSRenewal() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_TITLE</code>. 主标题,title,S_TITLE
     */
    @Override
    public SysAppRecord setSTitle(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_TITLE</code>. 主标题,title,S_TITLE
     */
    @Override
    public String getSTitle() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_TYPE</code>. 类别,type,S_TYPE
     */
    @Override
    public SysAppRecord setSType(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_TYPE</code>. 类别,type,S_TYPE
     */
    @Override
    public String getSType() {
        return (String) get(17);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.S_VERSION</code>. 版本信息,version,S_VERSION
     */
    @Override
    public SysAppRecord setSVersion(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.S_VERSION</code>. 版本信息,version,S_VERSION
     */
    @Override
    public String getSVersion() {
        return (String) get(18);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public SysAppRecord setJConfig(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(19);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.I_ATTACH_SIZE</code>. 附件尺寸,attachSize,I_ATTACH_SIZE
     */
    @Override
    public SysAppRecord setIAttachSize(Integer value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.I_ATTACH_SIZE</code>. 附件尺寸,attachSize,I_ATTACH_SIZE
     */
    @Override
    public Integer getIAttachSize() {
        return (Integer) get(20);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public SysAppRecord setIsActive(Boolean value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(21);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public SysAppRecord setZSigma(String value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(22);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public SysAppRecord setZLanguage(String value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(23);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public SysAppRecord setZCreateBy(String value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(24);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public SysAppRecord setZCreateTime(LocalDateTime value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(25);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public SysAppRecord setZUpdateBy(String value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(26);
    }

    /**
     * Setter for <code>DB_HTL.SYS_APP.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public SysAppRecord setZUpdateTime(LocalDateTime value) {
        set(27, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_APP.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(27);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ISysApp from) {
        setPkId(from.getPkId());
        setTComments(from.getTComments());
        setVEserverId(from.getVEserverId());
        setSName(from.getSName());
        setSCode(from.getSCode());
        setSAuth(from.getSAuth());
        setSBackUp(from.getSBackUp());
        setSContact(from.getSContact());
        setSCurrency(from.getSCurrency());
        setSDateFormat(from.getSDateFormat());
        setSEncoding(from.getSEncoding());
        setSIcp(from.getSIcp());
        setSLogo(from.getSLogo());
        setSOwner(from.getSOwner());
        setSPath(from.getSPath());
        setSRenewal(from.getSRenewal());
        setSTitle(from.getSTitle());
        setSType(from.getSType());
        setSVersion(from.getSVersion());
        setJConfig(from.getJConfig());
        setIAttachSize(from.getIAttachSize());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ISysApp> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysAppRecord
     */
    public SysAppRecord() {
        super(SysApp.SYS_APP);
    }

    /**
     * Create a detached, initialised SysAppRecord
     */
    public SysAppRecord(String pkId, String tComments, String vEserverId, String sName, String sCode, String sAuth, String sBackUp, String sContact, String sCurrency, String sDateFormat, String sEncoding, String sIcp, String sLogo, String sOwner, String sPath, String sRenewal, String sTitle, String sType, String sVersion, String jConfig, Integer iAttachSize, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(SysApp.SYS_APP);

        set(0, pkId);
        set(1, tComments);
        set(2, vEserverId);
        set(3, sName);
        set(4, sCode);
        set(5, sAuth);
        set(6, sBackUp);
        set(7, sContact);
        set(8, sCurrency);
        set(9, sDateFormat);
        set(10, sEncoding);
        set(11, sIcp);
        set(12, sLogo);
        set(13, sOwner);
        set(14, sPath);
        set(15, sRenewal);
        set(16, sTitle);
        set(17, sType);
        set(18, sVersion);
        set(19, jConfig);
        set(20, iAttachSize);
        set(21, isActive);
        set(22, zSigma);
        set(23, zLanguage);
        set(24, zCreateBy);
        set(25, zCreateTime);
        set(26, zUpdateBy);
        set(27, zUpdateTime);
    }
}
