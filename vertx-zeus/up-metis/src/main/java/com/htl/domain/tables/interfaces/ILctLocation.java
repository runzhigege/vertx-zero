/*
 * This file is generated by jOOQ.
*/
package com.htl.domain.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ILctLocation extends Serializable {

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.PK_ID</code>. uniqueId,PK_ID
     */
    public ILctLocation setPkId(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.PK_ID</code>. uniqueId,PK_ID
     */
    public String getPkId();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.S_NAME</code>. name,S_NAME
     */
    public ILctLocation setSName(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.S_NAME</code>. name,S_NAME
     */
    public String getSName();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.S_CODE</code>. code,S_CODE
     */
    public ILctLocation setSCode(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.S_CODE</code>. code,S_CODE
     */
    public String getSCode();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.S_ADDRESS</code>. address,S_ADDRESS
     */
    public ILctLocation setSAddress(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.S_ADDRESS</code>. address,S_ADDRESS
     */
    public String getSAddress();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.S_CITY</code>. city,S_CITY
     */
    public ILctLocation setSCity(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.S_CITY</code>. city,S_CITY
     */
    public String getSCity();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.S_COUNTRY</code>. country,S_COUNTRY
     */
    public ILctLocation setSCountry(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.S_COUNTRY</code>. country,S_COUNTRY
     */
    public String getSCountry();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.S_DISTINCT</code>. distinct,S_DISTINCT
     */
    public ILctLocation setSDistinct(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.S_DISTINCT</code>. distinct,S_DISTINCT
     */
    public String getSDistinct();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.S_FULLNAME</code>. 地址全称，通过计算出来的,fullName,S_FULLNAME
     */
    public ILctLocation setSFullname(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.S_FULLNAME</code>. 地址全称，通过计算出来的,fullName,S_FULLNAME
     */
    public String getSFullname();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.S_STATE</code>. state,S_STATE
     */
    public ILctLocation setSState(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.S_STATE</code>. state,S_STATE
     */
    public String getSState();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.S_STREET1</code>. street1,S_STREET1
     */
    public ILctLocation setSStreet1(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.S_STREET1</code>. street1,S_STREET1
     */
    public String getSStreet1();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.S_STREET2</code>. street2,S_STREET2
     */
    public ILctLocation setSStreet2(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.S_STREET2</code>. street2,S_STREET2
     */
    public String getSStreet2();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.S_STREET3</code>. street3,S_STREET3
     */
    public ILctLocation setSStreet3(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.S_STREET3</code>. street3,S_STREET3
     */
    public String getSStreet3();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.S_ZIP</code>. zip,S_ZIP
     */
    public ILctLocation setSZip(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.S_ZIP</code>. zip,S_ZIP
     */
    public String getSZip();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.J_CONFIG</code>. config,J_CONFIG
     */
    public ILctLocation setJConfig(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.J_CONFIG</code>. config,J_CONFIG
     */
    public String getJConfig();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.R_DISTINCT_ID</code>. distinctId,R_DISTINCT_ID
     */
    public ILctLocation setRDistinctId(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.R_DISTINCT_ID</code>. distinctId,R_DISTINCT_ID
     */
    public String getRDistinctId();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public ILctLocation setIsActive(Boolean value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public Boolean getIsActive();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public ILctLocation setZSigma(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public String getZSigma();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public ILctLocation setZLanguage(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public String getZLanguage();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public ILctLocation setZCreateBy(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public String getZCreateBy();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public ILctLocation setZCreateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public LocalDateTime getZCreateTime();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public ILctLocation setZUpdateBy(String value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public String getZUpdateBy();

    /**
     * Setter for <code>DB_HTL.LCT_LOCATION.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public ILctLocation setZUpdateTime(LocalDateTime value);

    /**
     * Getter for <code>DB_HTL.LCT_LOCATION.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public LocalDateTime getZUpdateTime();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ILctLocation
     */
    public void from(com.htl.domain.tables.interfaces.ILctLocation from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ILctLocation
     */
    public <E extends com.htl.domain.tables.interfaces.ILctLocation> E into(E into);

    default ILctLocation fromJson(io.vertx.core.json.JsonObject json) {
        setPkId(json.getString("PK_ID"));
        setSName(json.getString("S_NAME"));
        setSCode(json.getString("S_CODE"));
        setSAddress(json.getString("S_ADDRESS"));
        setSCity(json.getString("S_CITY"));
        setSCountry(json.getString("S_COUNTRY"));
        setSDistinct(json.getString("S_DISTINCT"));
        setSFullname(json.getString("S_FULLNAME"));
        setSState(json.getString("S_STATE"));
        setSStreet1(json.getString("S_STREET1"));
        setSStreet2(json.getString("S_STREET2"));
        setSStreet3(json.getString("S_STREET3"));
        setSZip(json.getString("S_ZIP"));
        setJConfig(json.getString("J_CONFIG"));
        setRDistinctId(json.getString("R_DISTINCT_ID"));
        setIsActive(json.getBoolean("IS_ACTIVE"));
        setZSigma(json.getString("Z_SIGMA"));
        setZLanguage(json.getString("Z_LANGUAGE"));
        setZCreateBy(json.getString("Z_CREATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        setZUpdateBy(json.getString("Z_UPDATE_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PK_ID",getPkId());
        json.put("S_NAME",getSName());
        json.put("S_CODE",getSCode());
        json.put("S_ADDRESS",getSAddress());
        json.put("S_CITY",getSCity());
        json.put("S_COUNTRY",getSCountry());
        json.put("S_DISTINCT",getSDistinct());
        json.put("S_FULLNAME",getSFullname());
        json.put("S_STATE",getSState());
        json.put("S_STREET1",getSStreet1());
        json.put("S_STREET2",getSStreet2());
        json.put("S_STREET3",getSStreet3());
        json.put("S_ZIP",getSZip());
        json.put("J_CONFIG",getJConfig());
        json.put("R_DISTINCT_ID",getRDistinctId());
        json.put("IS_ACTIVE",getIsActive());
        json.put("Z_SIGMA",getZSigma());
        json.put("Z_LANGUAGE",getZLanguage());
        json.put("Z_CREATE_BY",getZCreateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_CREATE_TIME!
        json.put("Z_UPDATE_BY",getZUpdateBy());
        // Omitting unrecognized type java.time.LocalDateTime for column Z_UPDATE_TIME!
        return json;
    }

}
