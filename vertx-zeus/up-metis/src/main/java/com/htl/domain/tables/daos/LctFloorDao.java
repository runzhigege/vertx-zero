/*
 * This up.god.file is generated by jOOQ.
 */
package com.htl.domain.tables.daos;


import com.htl.domain.tables.LctFloor;
import com.htl.domain.tables.records.LctFloorRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;

import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;

/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.7"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class LctFloorDao extends DAOImpl<LctFloorRecord, com.htl.domain.tables.pojos.LctFloor, String> implements VertxDAO<com.htl.domain.tables.records.LctFloorRecord, com.htl.domain.tables.pojos.LctFloor, java.lang.String> {

    private io.vertx.core.Vertx vertx;

    /**
     * Create a new LctFloorDao without any configuration
     */
    public LctFloorDao() {
        super(LctFloor.LCT_FLOOR, com.htl.domain.tables.pojos.LctFloor.class);
    }

    /**
     * Create a new LctFloorDao with an attached configuration
     */
    public LctFloorDao(Configuration configuration) {
        super(LctFloor.LCT_FLOOR, com.htl.domain.tables.pojos.LctFloor.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(com.htl.domain.tables.pojos.LctFloor object) {
        return object.getPkId();
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctFloor> fetchByPkId(String... values) {
        return fetch(LctFloor.LCT_FLOOR.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code>
     */
    public com.htl.domain.tables.pojos.LctFloor fetchOneByPkId(String value) {
        return fetchOne(LctFloor.LCT_FLOOR.PK_ID, value);
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctFloor> fetchBySName(String... values) {
        return fetch(LctFloor.LCT_FLOOR.S_NAME, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctFloor> fetchBySCode(String... values) {
        return fetch(LctFloor.LCT_FLOOR.S_CODE, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctFloor> fetchByJConfig(String... values) {
        return fetch(LctFloor.LCT_FLOOR.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>I_ORDER IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctFloor> fetchByIOrder(Integer... values) {
        return fetch(LctFloor.LCT_FLOOR.I_ORDER, values);
    }

    /**
     * Fetch records that have <code>R_TENT_ID IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctFloor> fetchByRTentId(String... values) {
        return fetch(LctFloor.LCT_FLOOR.R_TENT_ID, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctFloor> fetchByIsActive(Boolean... values) {
        return fetch(LctFloor.LCT_FLOOR.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctFloor> fetchByZSigma(String... values) {
        return fetch(LctFloor.LCT_FLOOR.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctFloor> fetchByZLanguage(String... values) {
        return fetch(LctFloor.LCT_FLOOR.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctFloor> fetchByZCreateBy(String... values) {
        return fetch(LctFloor.LCT_FLOOR.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctFloor> fetchByZCreateTime(LocalDateTime... values) {
        return fetch(LctFloor.LCT_FLOOR.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctFloor> fetchByZUpdateBy(String... values) {
        return fetch(LctFloor.LCT_FLOOR.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code>
     */
    public List<com.htl.domain.tables.pojos.LctFloor> fetchByZUpdateTime(LocalDateTime... values) {
        return fetch(LctFloor.LCT_FLOOR.Z_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>PK_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctFloor>> fetchByPkIdAsync(List<String> values) {
        return fetchAsync(LctFloor.LCT_FLOOR.PK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PK_ID = value</code> asynchronously
     */
    public CompletableFuture<com.htl.domain.tables.pojos.LctFloor> fetchOneByPkIdAsync(String value) {
        return FutureTool.executeBlocking(h -> h.complete(fetchOneByPkId(value)), vertx());
    }

    /**
     * Fetch records that have <code>S_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctFloor>> fetchBySNameAsync(List<String> values) {
        return fetchAsync(LctFloor.LCT_FLOOR.S_NAME, values);
    }

    /**
     * Fetch records that have <code>S_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctFloor>> fetchBySCodeAsync(List<String> values) {
        return fetchAsync(LctFloor.LCT_FLOOR.S_CODE, values);
    }

    /**
     * Fetch records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctFloor>> fetchByJConfigAsync(List<String> values) {
        return fetchAsync(LctFloor.LCT_FLOOR.J_CONFIG, values);
    }

    /**
     * Fetch records that have <code>I_ORDER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctFloor>> fetchByIOrderAsync(List<Integer> values) {
        return fetchAsync(LctFloor.LCT_FLOOR.I_ORDER, values);
    }

    /**
     * Fetch records that have <code>R_TENT_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctFloor>> fetchByRTentIdAsync(List<String> values) {
        return fetchAsync(LctFloor.LCT_FLOOR.R_TENT_ID, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctFloor>> fetchByIsActiveAsync(List<Boolean> values) {
        return fetchAsync(LctFloor.LCT_FLOOR.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctFloor>> fetchByZSigmaAsync(List<String> values) {
        return fetchAsync(LctFloor.LCT_FLOOR.Z_SIGMA, values);
    }

    /**
     * Fetch records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctFloor>> fetchByZLanguageAsync(List<String> values) {
        return fetchAsync(LctFloor.LCT_FLOOR.Z_LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctFloor>> fetchByZCreateByAsync(List<String> values) {
        return fetchAsync(LctFloor.LCT_FLOOR.Z_CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_CREATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctFloor>> fetchByZCreateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(LctFloor.LCT_FLOOR.Z_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctFloor>> fetchByZUpdateByAsync(List<String> values) {
        return fetchAsync(LctFloor.LCT_FLOOR.Z_UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>Z_UPDATE_TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<com.htl.domain.tables.pojos.LctFloor>> fetchByZUpdateTimeAsync(List<LocalDateTime> values) {
        return fetchAsync(LctFloor.LCT_FLOOR.Z_UPDATE_TIME, values);
    }

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
