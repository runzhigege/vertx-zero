/*
 * This file is generated by jOOQ.
*/
package com.htl.domain.tables.records;


import com.htl.domain.tables.SysCategory;
import com.htl.domain.tables.interfaces.ISysCategory;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysCategoryRecord extends UpdatableRecordImpl<SysCategoryRecord> implements Record16<String, String, String, String, String, Long, Integer, Long, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, ISysCategory {

    private static final long serialVersionUID = 887386660;

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public SysCategoryRecord setPkId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.S_NAME</code>. name,S_NAME
     */
    @Override
    public SysCategoryRecord setSName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.S_NAME</code>. name,S_NAME
     */
    @Override
    public String getSName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.S_CODE</code>. code,S_CODE
     */
    @Override
    public SysCategoryRecord setSCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.S_TYPE</code>. REF：TABULAR -&gt; 类型本身分类，可指定不同模块,type,S_TYPE
     */
    @Override
    public SysCategoryRecord setSType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.S_TYPE</code>. REF：TABULAR -&gt; 类型本身分类，可指定不同模块,type,S_TYPE
     */
    @Override
    public String getSType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public SysCategoryRecord setJConfig(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.I_LEFT</code>. left,I_LEFT
     */
    @Override
    public SysCategoryRecord setILeft(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.I_LEFT</code>. left,I_LEFT
     */
    @Override
    public Long getILeft() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.I_LEVEL</code>. level,I_LEVEL
     */
    @Override
    public SysCategoryRecord setILevel(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.I_LEVEL</code>. level,I_LEVEL
     */
    @Override
    public Integer getILevel() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.I_RIGHT</code>. right,I_RIGHT
     */
    @Override
    public SysCategoryRecord setIRight(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.I_RIGHT</code>. right,I_RIGHT
     */
    @Override
    public Long getIRight() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.R_PARENT_ID</code>. parentId,R_PARENT_ID
     */
    @Override
    public SysCategoryRecord setRParentId(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.R_PARENT_ID</code>. parentId,R_PARENT_ID
     */
    @Override
    public String getRParentId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public SysCategoryRecord setIsActive(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public SysCategoryRecord setZSigma(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public SysCategoryRecord setZLanguage(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public SysCategoryRecord setZCreateBy(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public SysCategoryRecord setZCreateTime(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public SysCategoryRecord setZUpdateBy(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_HTL.SYS_CATEGORY.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public SysCategoryRecord setZUpdateTime(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.SYS_CATEGORY.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row16<String, String, String, String, String, Long, Integer, Long, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row16<String, String, String, String, String, Long, Integer, Long, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row16) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return SysCategory.SYS_CATEGORY.PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SysCategory.SYS_CATEGORY.S_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return SysCategory.SYS_CATEGORY.S_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SysCategory.SYS_CATEGORY.S_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return SysCategory.SYS_CATEGORY.J_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return SysCategory.SYS_CATEGORY.I_LEFT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return SysCategory.SYS_CATEGORY.I_LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field8() {
        return SysCategory.SYS_CATEGORY.I_RIGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return SysCategory.SYS_CATEGORY.R_PARENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field10() {
        return SysCategory.SYS_CATEGORY.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return SysCategory.SYS_CATEGORY.Z_SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return SysCategory.SYS_CATEGORY.Z_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return SysCategory.SYS_CATEGORY.Z_CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field14() {
        return SysCategory.SYS_CATEGORY.Z_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return SysCategory.SYS_CATEGORY.Z_UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field16() {
        return SysCategory.SYS_CATEGORY.Z_UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component6() {
        return getILeft();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getILevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component8() {
        return getIRight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getRParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component10() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component14() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component16() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getILeft();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getILevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value8() {
        return getIRight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getRParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value10() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value14() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value16() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value1(String value) {
        setPkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value2(String value) {
        setSName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value3(String value) {
        setSCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value4(String value) {
        setSType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value5(String value) {
        setJConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value6(Long value) {
        setILeft(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value7(Integer value) {
        setILevel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value8(Long value) {
        setIRight(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value9(String value) {
        setRParentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value10(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value11(String value) {
        setZSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value12(String value) {
        setZLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value13(String value) {
        setZCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value14(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value15(String value) {
        setZUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord value16(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysCategoryRecord values(String value1, String value2, String value3, String value4, String value5, Long value6, Integer value7, Long value8, String value9, Boolean value10, String value11, String value12, String value13, LocalDateTime value14, String value15, LocalDateTime value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ISysCategory from) {
        setPkId(from.getPkId());
        setSName(from.getSName());
        setSCode(from.getSCode());
        setSType(from.getSType());
        setJConfig(from.getJConfig());
        setILeft(from.getILeft());
        setILevel(from.getILevel());
        setIRight(from.getIRight());
        setRParentId(from.getRParentId());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ISysCategory> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysCategoryRecord
     */
    public SysCategoryRecord() {
        super(SysCategory.SYS_CATEGORY);
    }

    /**
     * Create a detached, initialised SysCategoryRecord
     */
    public SysCategoryRecord(String pkId, String sName, String sCode, String sType, String jConfig, Long iLeft, Integer iLevel, Long iRight, String rParentId, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(SysCategory.SYS_CATEGORY);

        set(0, pkId);
        set(1, sName);
        set(2, sCode);
        set(3, sType);
        set(4, jConfig);
        set(5, iLeft);
        set(6, iLevel);
        set(7, iRight);
        set(8, rParentId);
        set(9, isActive);
        set(10, zSigma);
        set(11, zLanguage);
        set(12, zCreateBy);
        set(13, zCreateTime);
        set(14, zUpdateBy);
        set(15, zUpdateTime);
    }
}
