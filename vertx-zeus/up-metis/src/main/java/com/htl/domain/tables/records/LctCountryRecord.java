/*
 * This file is generated by jOOQ.
*/
package com.htl.domain.tables.records;


import com.htl.domain.tables.LctCountry;
import com.htl.domain.tables.interfaces.ILctCountry;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LctCountryRecord extends UpdatableRecordImpl<LctCountryRecord> implements Record15<String, String, String, String, String, String, Integer, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, ILctCountry {

    private static final long serialVersionUID = -1311509145;

    /**
     * Setter for <code>DB_HTL.LCT_COUNTRY.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public LctCountryRecord setPkId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.LCT_COUNTRY.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_HTL.LCT_COUNTRY.S_NAME</code>. 国家名称,name,S_NAME
     */
    @Override
    public LctCountryRecord setSName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.LCT_COUNTRY.S_NAME</code>. 国家名称,name,S_NAME
     */
    @Override
    public String getSName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_HTL.LCT_COUNTRY.S_CODE</code>. code,S_CODE
     */
    @Override
    public LctCountryRecord setSCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.LCT_COUNTRY.S_CODE</code>. code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_HTL.LCT_COUNTRY.S_FLAG</code>. 国旗,flag,S_FLAG
     */
    @Override
    public LctCountryRecord setSFlag(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.LCT_COUNTRY.S_FLAG</code>. 国旗,flag,S_FLAG
     */
    @Override
    public String getSFlag() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_HTL.LCT_COUNTRY.S_PHONE_PREFIX</code>. 电话前缀,phonePrefix,S_PHONE_PREFIX
     */
    @Override
    public LctCountryRecord setSPhonePrefix(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.LCT_COUNTRY.S_PHONE_PREFIX</code>. 电话前缀,phonePrefix,S_PHONE_PREFIX
     */
    @Override
    public String getSPhonePrefix() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_HTL.LCT_COUNTRY.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public LctCountryRecord setJConfig(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.LCT_COUNTRY.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_HTL.LCT_COUNTRY.I_ORDER</code>. 排序,order,I_ORDER
     */
    @Override
    public LctCountryRecord setIOrder(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.LCT_COUNTRY.I_ORDER</code>. 排序,order,I_ORDER
     */
    @Override
    public Integer getIOrder() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>DB_HTL.LCT_COUNTRY.R_CURRENCY_ID</code>. 使用货币,currencyId,R_CURRENCY_ID
     */
    @Override
    public LctCountryRecord setRCurrencyId(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.LCT_COUNTRY.R_CURRENCY_ID</code>. 使用货币,currencyId,R_CURRENCY_ID
     */
    @Override
    public String getRCurrencyId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_HTL.LCT_COUNTRY.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public LctCountryRecord setIsActive(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.LCT_COUNTRY.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>DB_HTL.LCT_COUNTRY.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public LctCountryRecord setZSigma(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.LCT_COUNTRY.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_HTL.LCT_COUNTRY.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public LctCountryRecord setZLanguage(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.LCT_COUNTRY.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_HTL.LCT_COUNTRY.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public LctCountryRecord setZCreateBy(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.LCT_COUNTRY.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_HTL.LCT_COUNTRY.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LctCountryRecord setZCreateTime(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.LCT_COUNTRY.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>DB_HTL.LCT_COUNTRY.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public LctCountryRecord setZUpdateBy(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.LCT_COUNTRY.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_HTL.LCT_COUNTRY.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LctCountryRecord setZUpdateTime(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_HTL.LCT_COUNTRY.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, String, String, String, String, String, Integer, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, String, String, String, String, String, Integer, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row15) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return LctCountry.LCT_COUNTRY.PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return LctCountry.LCT_COUNTRY.S_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return LctCountry.LCT_COUNTRY.S_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return LctCountry.LCT_COUNTRY.S_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return LctCountry.LCT_COUNTRY.S_PHONE_PREFIX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return LctCountry.LCT_COUNTRY.J_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return LctCountry.LCT_COUNTRY.I_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return LctCountry.LCT_COUNTRY.R_CURRENCY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field9() {
        return LctCountry.LCT_COUNTRY.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return LctCountry.LCT_COUNTRY.Z_SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return LctCountry.LCT_COUNTRY.Z_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return LctCountry.LCT_COUNTRY.Z_CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field13() {
        return LctCountry.LCT_COUNTRY.Z_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return LctCountry.LCT_COUNTRY.Z_UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field15() {
        return LctCountry.LCT_COUNTRY.Z_UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSPhonePrefix();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getIOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getRCurrencyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component9() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component13() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component15() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSPhonePrefix();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getJConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getIOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getRCurrencyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value9() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getZSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getZLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getZCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value13() {
        return getZCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getZUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value15() {
        return getZUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord value1(String value) {
        setPkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord value2(String value) {
        setSName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord value3(String value) {
        setSCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord value4(String value) {
        setSFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord value5(String value) {
        setSPhonePrefix(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord value6(String value) {
        setJConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord value7(Integer value) {
        setIOrder(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord value8(String value) {
        setRCurrencyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord value9(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord value10(String value) {
        setZSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord value11(String value) {
        setZLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord value12(String value) {
        setZCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord value13(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord value14(String value) {
        setZUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord value15(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LctCountryRecord values(String value1, String value2, String value3, String value4, String value5, String value6, Integer value7, String value8, Boolean value9, String value10, String value11, String value12, LocalDateTime value13, String value14, LocalDateTime value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ILctCountry from) {
        setPkId(from.getPkId());
        setSName(from.getSName());
        setSCode(from.getSCode());
        setSFlag(from.getSFlag());
        setSPhonePrefix(from.getSPhonePrefix());
        setJConfig(from.getJConfig());
        setIOrder(from.getIOrder());
        setRCurrencyId(from.getRCurrencyId());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ILctCountry> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LctCountryRecord
     */
    public LctCountryRecord() {
        super(LctCountry.LCT_COUNTRY);
    }

    /**
     * Create a detached, initialised LctCountryRecord
     */
    public LctCountryRecord(String pkId, String sName, String sCode, String sFlag, String sPhonePrefix, String jConfig, Integer iOrder, String rCurrencyId, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(LctCountry.LCT_COUNTRY);

        set(0, pkId);
        set(1, sName);
        set(2, sCode);
        set(3, sFlag);
        set(4, sPhonePrefix);
        set(5, jConfig);
        set(6, iOrder);
        set(7, rCurrencyId);
        set(8, isActive);
        set(9, zSigma);
        set(10, zLanguage);
        set(11, zCreateBy);
        set(12, zCreateTime);
        set(13, zUpdateBy);
        set(14, zUpdateTime);
    }
}
