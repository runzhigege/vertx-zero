/*
 * This up.god.file is generated by jOOQ.
 */
package com.htl.domain.tables;


import com.htl.domain.DbHtl;
import com.htl.domain.Indexes;
import com.htl.domain.Keys;
import com.htl.domain.tables.records.SysNumberRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.7"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class SysNumber extends TableImpl<SysNumberRecord> {

    /**
     * The reference instance of <code>DB_HTL.SYS_NUMBER</code>
     */
    public static final SysNumber SYS_NUMBER = new SysNumber();
    private static final long serialVersionUID = -1916808013;
    /**
     * The column <code>DB_HTL.SYS_NUMBER.PK_ID</code>. uniqueId,PK_ID
     */
    public final TableField<SysNumberRecord, String> PK_ID = createField("PK_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "uniqueId,PK_ID");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.L_CURRENT</code>. 编号当前值，对应${seed}，每次变化时current提取后更新为：current + step或current - step,current,L_CURRENT
     */
    public final TableField<SysNumberRecord, Long> L_CURRENT = createField("L_CURRENT", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "编号当前值，对应${seed}，每次变化时current提取后更新为：current + step或current - step,current,L_CURRENT");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.S_CODE</code>. code,S_CODE
     */
    public final TableField<SysNumberRecord, String> S_CODE = createField("S_CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "code,S_CODE");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.S_COMMENT</code>. 编号备注信息，用于描述编号数据,comment,S_COMMENT
     */
    public final TableField<SysNumberRecord, String> S_COMMENT = createField("S_COMMENT", org.jooq.impl.SQLDataType.VARCHAR(255), this, "编号备注信息，用于描述编号数据,comment,S_COMMENT");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.S_FORMAT</code>. 格式信息，用于处理最终格式：,format,S_FORMAT
     */
    public final TableField<SysNumberRecord, String> S_FORMAT = createField("S_FORMAT", org.jooq.impl.SQLDataType.VARCHAR(255), this, "格式信息，用于处理最终格式：,format,S_FORMAT");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.S_IDENTIFIER</code>. 编号对应的identifier，用于查询当前identifier使用的序号信息,identifier,S_IDENTIFIER
     */
    public final TableField<SysNumberRecord, String> S_IDENTIFIER = createField("S_IDENTIFIER", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "编号对应的identifier，用于查询当前identifier使用的序号信息,identifier,S_IDENTIFIER");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.S_PREFIX</code>. 编号前缀,prefix,S_PREFIX
     */
    public final TableField<SysNumberRecord, String> S_PREFIX = createField("S_PREFIX", org.jooq.impl.SQLDataType.VARCHAR(10), this, "编号前缀,prefix,S_PREFIX");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.S_SUFFIX</code>. 编号后缀,suffix,S_SUFFIX
     */
    public final TableField<SysNumberRecord, String> S_SUFFIX = createField("S_SUFFIX", org.jooq.impl.SQLDataType.VARCHAR(10), this, "编号后缀,suffix,S_SUFFIX");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.S_TIME</code>. 时间对应Pattern，对应${time}：YYYY-MM-DD HH:mm:ss用于描述时间格式生成序号时间部分,time,S_TIME
     */
    public final TableField<SysNumberRecord, String> S_TIME = createField("S_TIME", org.jooq.impl.SQLDataType.VARCHAR(20), this, "时间对应Pattern，对应${time}：YYYY-MM-DD HH:mm:ss用于描述时间格式生成序号时间部分,time,S_TIME");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.J_CONFIG</code>. config,J_CONFIG
     */
    public final TableField<SysNumberRecord, String> J_CONFIG = createField("J_CONFIG", org.jooq.impl.SQLDataType.CLOB, this, "config,J_CONFIG");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.I_LENGTH</code>. 编号长度，编号长度不包含prefix和suffix部分,length,I_LENGTH
     */
    public final TableField<SysNumberRecord, Integer> I_LENGTH = createField("I_LENGTH", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "编号长度，编号长度不包含prefix和suffix部分,length,I_LENGTH");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.I_STEP</code>. 编号的步进系数，每次按照step进行变化,step,I_STEP
     */
    public final TableField<SysNumberRecord, Integer> I_STEP = createField("I_STEP", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "编号的步进系数，每次按照step进行变化,step,I_STEP");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.IS_DECREMENT</code>. 递增/递减？如果为true则递减，为false则是递增,decrement,IS_DECREMENT
     */
    public final TableField<SysNumberRecord, Boolean> IS_DECREMENT = createField("IS_DECREMENT", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "递增/递减？如果为true则递减，为false则是递增,decrement,IS_DECREMENT");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    public final TableField<SysNumberRecord, Boolean> IS_ACTIVE = createField("IS_ACTIVE", org.jooq.impl.SQLDataType.BOOLEAN, this, "active,IS_ACTIVE");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    public final TableField<SysNumberRecord, String> Z_SIGMA = createField("Z_SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "sigma,Z_SIGMA");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.Z_LANGUAGE</code>. language,Z_LANGUAGE
     */
    public final TableField<SysNumberRecord, String> Z_LANGUAGE = createField("Z_LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "language,Z_LANGUAGE");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.Z_CREATE_BY</code>. createBy,Z_CREATE_BY
     */
    public final TableField<SysNumberRecord, String> Z_CREATE_BY = createField("Z_CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "createBy,Z_CREATE_BY");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.Z_CREATE_TIME</code>. createTime,Z_CREATE_TIME
     */
    public final TableField<SysNumberRecord, LocalDateTime> Z_CREATE_TIME = createField("Z_CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "createTime,Z_CREATE_TIME");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.Z_UPDATE_BY</code>. updateBy,Z_UPDATE_BY
     */
    public final TableField<SysNumberRecord, String> Z_UPDATE_BY = createField("Z_UPDATE_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "updateBy,Z_UPDATE_BY");
    /**
     * The column <code>DB_HTL.SYS_NUMBER.Z_UPDATE_TIME</code>. updateTime,Z_UPDATE_TIME
     */
    public final TableField<SysNumberRecord, LocalDateTime> Z_UPDATE_TIME = createField("Z_UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "updateTime,Z_UPDATE_TIME");

    /**
     * Create a <code>DB_HTL.SYS_NUMBER</code> table reference
     */
    public SysNumber() {
        this(DSL.name("SYS_NUMBER"), null);
    }

    /**
     * Create an aliased <code>DB_HTL.SYS_NUMBER</code> table reference
     */
    public SysNumber(String alias) {
        this(DSL.name(alias), SYS_NUMBER);
    }

    /**
     * Create an aliased <code>DB_HTL.SYS_NUMBER</code> table reference
     */
    public SysNumber(Name alias) {
        this(alias, SYS_NUMBER);
    }

    private SysNumber(Name alias, Table<SysNumberRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysNumber(Name alias, Table<SysNumberRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysNumberRecord> getRecordType() {
        return SysNumberRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbHtl.DB_HTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_NUMBER_PRIMARY, Indexes.SYS_NUMBER_UK_SYS_NUMBER_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysNumberRecord> getPrimaryKey() {
        return Keys.KEY_SYS_NUMBER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysNumberRecord>> getKeys() {
        return Arrays.<UniqueKey<SysNumberRecord>>asList(Keys.KEY_SYS_NUMBER_PRIMARY, Keys.KEY_SYS_NUMBER_UK_SYS_NUMBER_S_CODE_Z_SIGMA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysNumber as(String alias) {
        return new SysNumber(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysNumber as(Name alias) {
        return new SysNumber(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysNumber rename(String name) {
        return new SysNumber(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysNumber rename(Name name) {
        return new SysNumber(name, null);
    }
}
