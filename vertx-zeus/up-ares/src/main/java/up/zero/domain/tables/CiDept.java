/*
 * This file is generated by jOOQ.
*/
package up.zero.domain.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import up.zero.domain.DbRbac;
import up.zero.domain.Indexes;
import up.zero.domain.Keys;
import up.zero.domain.tables.records.CiDeptRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CiDept extends TableImpl<CiDeptRecord> {

    private static final long serialVersionUID = -1890189726;

    /**
     * The reference instance of <code>DB_RBAC.CI_DEPT</code>
     */
    public static final CiDept CI_DEPT = new CiDept();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CiDeptRecord> getRecordType() {
        return CiDeptRecord.class;
    }

    /**
     * The column <code>DB_RBAC.CI_DEPT.KEY</code>. 「key」- 部门ID
     */
    public final TableField<CiDeptRecord, String> KEY = createField("KEY", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "「key」- 部门ID");

    /**
     * The column <code>DB_RBAC.CI_DEPT.NAME</code>. 「name」- 部门名称
     */
    public final TableField<CiDeptRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR(255), this, "「name」- 部门名称");

    /**
     * The column <code>DB_RBAC.CI_DEPT.CODE</code>. 「code」- 部门编码
     */
    public final TableField<CiDeptRecord, String> CODE = createField("CODE", org.jooq.impl.SQLDataType.VARCHAR(255), this, "「code」- 部门编码");

    /**
     * The column <code>DB_RBAC.CI_DEPT.COMMENT</code>. 「comment」- 部门备注
     */
    public final TableField<CiDeptRecord, String> COMMENT = createField("COMMENT", org.jooq.impl.SQLDataType.CLOB, this, "「comment」- 部门备注");

    /**
     * The column <code>DB_RBAC.CI_DEPT.MANAGER</code>. 「manager」- 部门经理
     */
    public final TableField<CiDeptRecord, String> MANAGER = createField("MANAGER", org.jooq.impl.SQLDataType.VARCHAR(255), this, "「manager」- 部门经理");

    /**
     * The column <code>DB_RBAC.CI_DEPT.CONTACT_MOBILE</code>. 「contactMobile」- 部门联系人手机
     */
    public final TableField<CiDeptRecord, String> CONTACT_MOBILE = createField("CONTACT_MOBILE", org.jooq.impl.SQLDataType.VARCHAR(11), this, "「contactMobile」- 部门联系人手机");

    /**
     * The column <code>DB_RBAC.CI_DEPT.CONTACT_NAME</code>. 「contactName」- 部门联系人姓名
     */
    public final TableField<CiDeptRecord, String> CONTACT_NAME = createField("CONTACT_NAME", org.jooq.impl.SQLDataType.VARCHAR(255), this, "「contactName」- 部门联系人姓名");

    /**
     * The column <code>DB_RBAC.CI_DEPT.APP_ID</code>. 「appId」- 部门关联的APP ID
     */
    public final TableField<CiDeptRecord, String> APP_ID = createField("APP_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「appId」- 部门关联的APP ID");

    /**
     * The column <code>DB_RBAC.CI_DEPT.LANGUAGE</code>. 「language」- 使用的语言
     */
    public final TableField<CiDeptRecord, String> LANGUAGE = createField("LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(10), this, "「language」- 使用的语言");

    /**
     * The column <code>DB_RBAC.CI_DEPT.ACTIVE</code>. 「active」- 是否启用
     */
    public final TableField<CiDeptRecord, Boolean> ACTIVE = createField("ACTIVE", org.jooq.impl.SQLDataType.BIT, this, "「active」- 是否启用");

    /**
     * The column <code>DB_RBAC.CI_DEPT.METADATA</code>. 「metadata」- 附加配置数据
     */
    public final TableField<CiDeptRecord, String> METADATA = createField("METADATA", org.jooq.impl.SQLDataType.CLOB, this, "「metadata」- 附加配置数据");

    /**
     * The column <code>DB_RBAC.CI_DEPT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public final TableField<CiDeptRecord, LocalDateTime> CREATED_AT = createField("CREATED_AT", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "「createdAt」- 创建时间");

    /**
     * The column <code>DB_RBAC.CI_DEPT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public final TableField<CiDeptRecord, String> CREATED_BY = createField("CREATED_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「createdBy」- 创建人");

    /**
     * The column <code>DB_RBAC.CI_DEPT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public final TableField<CiDeptRecord, LocalDateTime> UPDATED_AT = createField("UPDATED_AT", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "「updatedAt」- 更新时间");

    /**
     * The column <code>DB_RBAC.CI_DEPT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public final TableField<CiDeptRecord, String> UPDATED_BY = createField("UPDATED_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「updatedBy」- 更新人");

    /**
     * Create a <code>DB_RBAC.CI_DEPT</code> table reference
     */
    public CiDept() {
        this(DSL.name("CI_DEPT"), null);
    }

    /**
     * Create an aliased <code>DB_RBAC.CI_DEPT</code> table reference
     */
    public CiDept(String alias) {
        this(DSL.name(alias), CI_DEPT);
    }

    /**
     * Create an aliased <code>DB_RBAC.CI_DEPT</code> table reference
     */
    public CiDept(Name alias) {
        this(alias, CI_DEPT);
    }

    private CiDept(Name alias, Table<CiDeptRecord> aliased) {
        this(alias, aliased, null);
    }

    private CiDept(Name alias, Table<CiDeptRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbRbac.DB_RBAC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CI_DEPT_CODE, Indexes.CI_DEPT_NAME, Indexes.CI_DEPT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CiDeptRecord> getPrimaryKey() {
        return Keys.KEY_CI_DEPT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CiDeptRecord>> getKeys() {
        return Arrays.<UniqueKey<CiDeptRecord>>asList(Keys.KEY_CI_DEPT_PRIMARY, Keys.KEY_CI_DEPT_NAME, Keys.KEY_CI_DEPT_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CiDept as(String alias) {
        return new CiDept(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CiDept as(Name alias) {
        return new CiDept(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CiDept rename(String name) {
        return new CiDept(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CiDept rename(Name name) {
        return new CiDept(name, null);
    }
}
