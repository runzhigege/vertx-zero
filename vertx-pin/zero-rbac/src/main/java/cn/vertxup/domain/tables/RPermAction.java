/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.domain.tables;


import cn.vertxup.domain.Indexes;
import cn.vertxup.domain.Keys;
import cn.vertxup.domain.UpRbac;
import cn.vertxup.domain.tables.records.RPermActionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RPermAction extends TableImpl<RPermActionRecord> {

    private static final long serialVersionUID = -388148088;

    /**
     * The reference instance of <code>UP_RBAC.R_PERM_ACTION</code>
     */
    public static final RPermAction R_PERM_ACTION = new RPermAction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RPermActionRecord> getRecordType() {
        return RPermActionRecord.class;
    }

    /**
     * The column <code>UP_RBAC.R_PERM_ACTION.PERM_ID</code>. 「permId」- 关联权限ID
     */
    public final TableField<RPermActionRecord, String> PERM_ID = createField("PERM_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "「permId」- 关联权限ID");

    /**
     * The column <code>UP_RBAC.R_PERM_ACTION.ACTION_ID</code>. 「actionId」- 操作ID
     */
    public final TableField<RPermActionRecord, String> ACTION_ID = createField("ACTION_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "「actionId」- 操作ID");

    /**
     * Create a <code>UP_RBAC.R_PERM_ACTION</code> table reference
     */
    public RPermAction() {
        this(DSL.name("R_PERM_ACTION"), null);
    }

    /**
     * Create an aliased <code>UP_RBAC.R_PERM_ACTION</code> table reference
     */
    public RPermAction(String alias) {
        this(DSL.name(alias), R_PERM_ACTION);
    }

    /**
     * Create an aliased <code>UP_RBAC.R_PERM_ACTION</code> table reference
     */
    public RPermAction(Name alias) {
        this(alias, R_PERM_ACTION);
    }

    private RPermAction(Name alias, Table<RPermActionRecord> aliased) {
        this(alias, aliased, null);
    }

    private RPermAction(Name alias, Table<RPermActionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return UpRbac.UP_RBAC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.R_PERM_ACTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RPermActionRecord> getPrimaryKey() {
        return Keys.KEY_R_PERM_ACTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RPermActionRecord>> getKeys() {
        return Arrays.<UniqueKey<RPermActionRecord>>asList(Keys.KEY_R_PERM_ACTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RPermAction as(String alias) {
        return new RPermAction(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RPermAction as(Name alias) {
        return new RPermAction(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RPermAction rename(String name) {
        return new RPermAction(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RPermAction rename(Name name) {
        return new RPermAction(name, null);
    }
}
