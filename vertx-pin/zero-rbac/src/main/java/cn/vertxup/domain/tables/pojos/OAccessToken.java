/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.domain.tables.pojos;


import cn.vertxup.domain.tables.interfaces.IOAccessToken;

import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OAccessToken implements IOAccessToken {

    private static final long serialVersionUID = 618837304;

    private String        key;
    private byte[]        token;
    private LocalDateTime expiredTime;
    private byte[]        refreshToken;
    private String        language;
    private Boolean       active;
    private String        metadata;

    public OAccessToken() {}

    public OAccessToken(OAccessToken value) {
        this.key = value.key;
        this.token = value.token;
        this.expiredTime = value.expiredTime;
        this.refreshToken = value.refreshToken;
        this.language = value.language;
        this.active = value.active;
        this.metadata = value.metadata;
    }

    public OAccessToken(
        String        key,
        byte[]        token,
        LocalDateTime expiredTime,
        byte[]        refreshToken,
        String        language,
        Boolean       active,
        String        metadata
    ) {
        this.key = key;
        this.token = token;
        this.expiredTime = expiredTime;
        this.refreshToken = refreshToken;
        this.language = language;
        this.active = active;
        this.metadata = metadata;
    }

    @Override
    public String getKey() {
        return this.key;
    }

    @Override
    public OAccessToken setKey(String key) {
        this.key = key;
        return this;
    }

    @Override
    public byte[] getToken() {
        return this.token;
    }

    @Override
    public OAccessToken setToken(byte... token) {
        this.token = token;
        return this;
    }

    @Override
    public LocalDateTime getExpiredTime() {
        return this.expiredTime;
    }

    @Override
    public OAccessToken setExpiredTime(LocalDateTime expiredTime) {
        this.expiredTime = expiredTime;
        return this;
    }

    @Override
    public byte[] getRefreshToken() {
        return this.refreshToken;
    }

    @Override
    public OAccessToken setRefreshToken(byte... refreshToken) {
        this.refreshToken = refreshToken;
        return this;
    }

    @Override
    public String getLanguage() {
        return this.language;
    }

    @Override
    public OAccessToken setLanguage(String language) {
        this.language = language;
        return this;
    }

    @Override
    public Boolean getActive() {
        return this.active;
    }

    @Override
    public OAccessToken setActive(Boolean active) {
        this.active = active;
        return this;
    }

    @Override
    public String getMetadata() {
        return this.metadata;
    }

    @Override
    public OAccessToken setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("OAccessToken (");

        sb.append(key);
        sb.append(", ").append("[binary...]");
        sb.append(", ").append(expiredTime);
        sb.append(", ").append("[binary...]");
        sb.append(", ").append(language);
        sb.append(", ").append(active);
        sb.append(", ").append(metadata);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IOAccessToken from) {
        setKey(from.getKey());
        setToken(from.getToken());
        setExpiredTime(from.getExpiredTime());
        setRefreshToken(from.getRefreshToken());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IOAccessToken> E into(E into) {
        into.from(this);
        return into;
    }

    public OAccessToken(io.vertx.core.json.JsonObject json) {
        fromJson(json);
    }
}
