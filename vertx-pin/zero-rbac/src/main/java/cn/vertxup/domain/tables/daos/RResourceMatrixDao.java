/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.domain.tables.daos;


import cn.vertxup.domain.tables.RResourceMatrix;
import cn.vertxup.domain.tables.records.RResourceMatrixRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RResourceMatrixDao extends DAOImpl<RResourceMatrixRecord, cn.vertxup.domain.tables.pojos.RResourceMatrix, String> implements VertxDAO<cn.vertxup.domain.tables.records.RResourceMatrixRecord,cn.vertxup.domain.tables.pojos.RResourceMatrix,java.lang.String> {

    /**
     * Create a new RResourceMatrixDao without any configuration
     */
    public RResourceMatrixDao() {
        super(RResourceMatrix.R_RESOURCE_MATRIX, cn.vertxup.domain.tables.pojos.RResourceMatrix.class);
    }

    /**
     * Create a new RResourceMatrixDao with an attached configuration
     */
    public RResourceMatrixDao(Configuration configuration) {
        super(RResourceMatrix.R_RESOURCE_MATRIX, cn.vertxup.domain.tables.pojos.RResourceMatrix.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.domain.tables.pojos.RResourceMatrix object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchByKey(String... values) {
        return fetch(RResourceMatrix.R_RESOURCE_MATRIX.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.domain.tables.pojos.RResourceMatrix fetchOneByKey(String value) {
        return fetchOne(RResourceMatrix.R_RESOURCE_MATRIX.KEY, value);
    }

    /**
     * Fetch records that have <code>OWNER IN (values)</code>
     */
    public List<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchByOwner(String... values) {
        return fetch(RResourceMatrix.R_RESOURCE_MATRIX.OWNER, values);
    }

    /**
     * Fetch records that have <code>OWNER_TYPE IN (values)</code>
     */
    public List<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchByOwnerType(String... values) {
        return fetch(RResourceMatrix.R_RESOURCE_MATRIX.OWNER_TYPE, values);
    }

    /**
     * Fetch records that have <code>RESOURCE_ID IN (values)</code>
     */
    public List<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchByResourceId(String... values) {
        return fetch(RResourceMatrix.R_RESOURCE_MATRIX.RESOURCE_ID, values);
    }

    /**
     * Fetch records that have <code>PROJECTION IN (values)</code>
     */
    public List<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchByProjection(String... values) {
        return fetch(RResourceMatrix.R_RESOURCE_MATRIX.PROJECTION, values);
    }

    /**
     * Fetch records that have <code>CRITERIA IN (values)</code>
     */
    public List<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchByCriteria(String... values) {
        return fetch(RResourceMatrix.R_RESOURCE_MATRIX.CRITERIA, values);
    }

    /**
     * Fetch records that have <code>ROWS IN (values)</code>
     */
    public List<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchByRows(String... values) {
        return fetch(RResourceMatrix.R_RESOURCE_MATRIX.ROWS, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchBySigma(String... values) {
        return fetch(RResourceMatrix.R_RESOURCE_MATRIX.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchByLanguage(String... values) {
        return fetch(RResourceMatrix.R_RESOURCE_MATRIX.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchByActive(Boolean... values) {
        return fetch(RResourceMatrix.R_RESOURCE_MATRIX.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchByMetadata(String... values) {
        return fetch(RResourceMatrix.R_RESOURCE_MATRIX.METADATA, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(RResourceMatrix.R_RESOURCE_MATRIX.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchByCreatedBy(String... values) {
        return fetch(RResourceMatrix.R_RESOURCE_MATRIX.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(RResourceMatrix.R_RESOURCE_MATRIX.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchByUpdatedBy(String... values) {
        return fetch(RResourceMatrix.R_RESOURCE_MATRIX.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.domain.tables.pojos.RResourceMatrix>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(RResourceMatrix.R_RESOURCE_MATRIX.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.domain.tables.pojos.RResourceMatrix> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>OWNER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.domain.tables.pojos.RResourceMatrix>> fetchByOwnerAsync(List<String> values) {
        return fetchAsync(RResourceMatrix.R_RESOURCE_MATRIX.OWNER,values);
    }

    /**
     * Fetch records that have <code>OWNER_TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.domain.tables.pojos.RResourceMatrix>> fetchByOwnerTypeAsync(List<String> values) {
        return fetchAsync(RResourceMatrix.R_RESOURCE_MATRIX.OWNER_TYPE,values);
    }

    /**
     * Fetch records that have <code>RESOURCE_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.domain.tables.pojos.RResourceMatrix>> fetchByResourceIdAsync(List<String> values) {
        return fetchAsync(RResourceMatrix.R_RESOURCE_MATRIX.RESOURCE_ID,values);
    }

    /**
     * Fetch records that have <code>PROJECTION IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.domain.tables.pojos.RResourceMatrix>> fetchByProjectionAsync(List<String> values) {
        return fetchAsync(RResourceMatrix.R_RESOURCE_MATRIX.PROJECTION,values);
    }

    /**
     * Fetch records that have <code>CRITERIA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.domain.tables.pojos.RResourceMatrix>> fetchByCriteriaAsync(List<String> values) {
        return fetchAsync(RResourceMatrix.R_RESOURCE_MATRIX.CRITERIA,values);
    }

    /**
     * Fetch records that have <code>ROWS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.domain.tables.pojos.RResourceMatrix>> fetchByRowsAsync(List<String> values) {
        return fetchAsync(RResourceMatrix.R_RESOURCE_MATRIX.ROWS,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.domain.tables.pojos.RResourceMatrix>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(RResourceMatrix.R_RESOURCE_MATRIX.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.domain.tables.pojos.RResourceMatrix>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(RResourceMatrix.R_RESOURCE_MATRIX.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.domain.tables.pojos.RResourceMatrix>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(RResourceMatrix.R_RESOURCE_MATRIX.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.domain.tables.pojos.RResourceMatrix>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(RResourceMatrix.R_RESOURCE_MATRIX.METADATA,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.domain.tables.pojos.RResourceMatrix>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(RResourceMatrix.R_RESOURCE_MATRIX.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.domain.tables.pojos.RResourceMatrix>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(RResourceMatrix.R_RESOURCE_MATRIX.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.domain.tables.pojos.RResourceMatrix>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(RResourceMatrix.R_RESOURCE_MATRIX.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.domain.tables.pojos.RResourceMatrix>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(RResourceMatrix.R_RESOURCE_MATRIX.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
