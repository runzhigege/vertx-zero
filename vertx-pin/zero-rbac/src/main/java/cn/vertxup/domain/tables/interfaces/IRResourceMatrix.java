/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.domain.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IRResourceMatrix extends Serializable {

    /**
     * Setter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.KEY</code>. 「key」- 限定记录ID
     */
    public IRResourceMatrix setKey(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.KEY</code>. 「key」- 限定记录ID
     */
    public String getKey();

    /**
     * Setter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.OWNER</code>. 「owner」- 用户 / 角色ID
     */
    public IRResourceMatrix setOwner(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.OWNER</code>. 「owner」- 用户 / 角色ID
     */
    public String getOwner();

    /**
     * Setter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.OWNER_TYPE</code>. 「ownerType」- ROLE 角色，USER 用户
     */
    public IRResourceMatrix setOwnerType(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.OWNER_TYPE</code>. 「ownerType」- ROLE 角色，USER 用户
     */
    public String getOwnerType();

    /**
     * Setter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.RESOURCE_ID</code>. 「resourceId」- 关联资源ID
     */
    public IRResourceMatrix setResourceId(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.RESOURCE_ID</code>. 「resourceId」- 关联资源ID
     */
    public String getResourceId();

    /**
     * Setter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.PROJECTION</code>. 「projection」- 该资源的列定义（单用户处理）
     */
    public IRResourceMatrix setProjection(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.PROJECTION</code>. 「projection」- 该资源的列定义（单用户处理）
     */
    public String getProjection();

    /**
     * Setter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.CRITERIA</code>. 「criteria」- 该资源的行查询（单用户处理）
     */
    public IRResourceMatrix setCriteria(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.CRITERIA</code>. 「criteria」- 该资源的行查询（单用户处理）
     */
    public String getCriteria();

    /**
     * Setter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.ROWS</code>. 「rows」- 该资源针对保存的行进行过滤
     */
    public IRResourceMatrix setRows(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.ROWS</code>. 「rows」- 该资源针对保存的行进行过滤
     */
    public String getRows();

    /**
     * Setter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.SIGMA</code>. 「sigma」- 用户组绑定的统一标识
     */
    public IRResourceMatrix setSigma(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.SIGMA</code>. 「sigma」- 用户组绑定的统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IRResourceMatrix setLanguage(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.ACTIVE</code>. 「active」- 是否启用
     */
    public IRResourceMatrix setActive(Boolean value);

    /**
     * Getter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.METADATA</code>. 「metadata」- 附加配置数据
     */
    public IRResourceMatrix setMetadata(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.METADATA</code>. 「metadata」- 附加配置数据
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IRResourceMatrix setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IRResourceMatrix setCreatedBy(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IRResourceMatrix setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IRResourceMatrix setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ORIGIN_X.R_RESOURCE_MATRIX.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IRResourceMatrix
     */
    public void from(cn.vertxup.domain.tables.interfaces.IRResourceMatrix from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IRResourceMatrix
     */
    public <E extends cn.vertxup.domain.tables.interfaces.IRResourceMatrix> E into(E into);

    default IRResourceMatrix fromJson(io.vertx.core.json.JsonObject json) {
        setKey(json.getString("KEY"));
        setOwner(json.getString("OWNER"));
        setOwnerType(json.getString("OWNER_TYPE"));
        setResourceId(json.getString("RESOURCE_ID"));
        setProjection(json.getString("PROJECTION"));
        setCriteria(json.getString("CRITERIA"));
        setRows(json.getString("ROWS"));
        setSigma(json.getString("SIGMA"));
        setLanguage(json.getString("LANGUAGE"));
        setActive(json.getBoolean("ACTIVE"));
        setMetadata(json.getString("METADATA"));
        // Omitting unrecognized type java.time.LocalDateTime for column CREATED_AT!
        setCreatedBy(json.getString("CREATED_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column UPDATED_AT!
        setUpdatedBy(json.getString("UPDATED_BY"));
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("KEY",getKey());
        json.put("OWNER",getOwner());
        json.put("OWNER_TYPE",getOwnerType());
        json.put("RESOURCE_ID",getResourceId());
        json.put("PROJECTION",getProjection());
        json.put("CRITERIA",getCriteria());
        json.put("ROWS",getRows());
        json.put("SIGMA",getSigma());
        json.put("LANGUAGE",getLanguage());
        json.put("ACTIVE",getActive());
        json.put("METADATA",getMetadata());
        // Omitting unrecognized type java.time.LocalDateTime for column CREATED_AT!
        json.put("CREATED_BY",getCreatedBy());
        // Omitting unrecognized type java.time.LocalDateTime for column UPDATED_AT!
        json.put("UPDATED_BY",getUpdatedBy());
        return json;
    }

}
