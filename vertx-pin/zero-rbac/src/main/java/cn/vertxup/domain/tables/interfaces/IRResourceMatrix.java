/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.domain.tables.interfaces;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IRResourceMatrix extends Serializable {

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.KEY</code>. 「key」- 限定记录ID
     */
    public IRResourceMatrix setKey(String value);

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.KEY</code>. 「key」- 限定记录ID
     */
    public String getKey();

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.USER_ID</code>. 「userId」- 限定用户ID
     */
    public IRResourceMatrix setUserId(String value);

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.USER_ID</code>. 「userId」- 限定用户ID
     */
    public String getUserId();

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.RESOURCE_ID</code>. 「resourceId」- 关联资源ID
     */
    public IRResourceMatrix setResourceId(String value);

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.RESOURCE_ID</code>. 「resourceId」- 关联资源ID
     */
    public String getResourceId();

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.PROJECTION</code>. 「projection」- 该资源的列定义（单用户处理）
     */
    public IRResourceMatrix setProjection(String value);

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.PROJECTION</code>. 「projection」- 该资源的列定义（单用户处理）
     */
    public String getProjection();

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.QUERY</code>. 「query」- 该资源的行查询（单用户处理）
     */
    public IRResourceMatrix setQuery(String value);

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.QUERY</code>. 「query」- 该资源的行查询（单用户处理）
     */
    public String getQuery();

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.MODE_PROJECTION</code>. 「modeProject」- 资源过滤模式
     */
    public IRResourceMatrix setModeProjection(String value);

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.MODE_PROJECTION</code>. 「modeProject」- 资源过滤模式
     */
    public String getModeProjection();

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.MODE_QUERY</code>. 「modeQuery」- 资源查询模式
     */
    public IRResourceMatrix setModeQuery(String value);

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.MODE_QUERY</code>. 「modeQuery」- 资源查询模式
     */
    public String getModeQuery();

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.SIGMA</code>. 「sigma」- 所属APP的APPKEY
     */
    public IRResourceMatrix setSigma(String value);

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.SIGMA</code>. 「sigma」- 所属APP的APPKEY
     */
    public String getSigma();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IRResourceMatrix
     */
    public void from(cn.vertxup.domain.tables.interfaces.IRResourceMatrix from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IRResourceMatrix
     */
    public <E extends cn.vertxup.domain.tables.interfaces.IRResourceMatrix> E into(E into);

    default IRResourceMatrix fromJson(io.vertx.core.json.JsonObject json) {
        setKey(json.getString("KEY"));
        setUserId(json.getString("USER_ID"));
        setResourceId(json.getString("RESOURCE_ID"));
        setProjection(json.getString("PROJECTION"));
        setQuery(json.getString("QUERY"));
        setModeProjection(json.getString("MODE_PROJECTION"));
        setModeQuery(json.getString("MODE_QUERY"));
        setSigma(json.getString("SIGMA"));
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("KEY",getKey());
        json.put("USER_ID",getUserId());
        json.put("RESOURCE_ID",getResourceId());
        json.put("PROJECTION",getProjection());
        json.put("QUERY",getQuery());
        json.put("MODE_PROJECTION",getModeProjection());
        json.put("MODE_QUERY",getModeQuery());
        json.put("SIGMA",getSigma());
        return json;
    }

}
