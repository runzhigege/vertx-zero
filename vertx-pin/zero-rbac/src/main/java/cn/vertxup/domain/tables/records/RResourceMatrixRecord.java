/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.domain.tables.records;


import cn.vertxup.domain.tables.RResourceMatrix;
import cn.vertxup.domain.tables.interfaces.IRResourceMatrix;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RResourceMatrixRecord extends UpdatableRecordImpl<RResourceMatrixRecord> implements Record8<String, String, String, String, String, String, String, String>, IRResourceMatrix {

    private static final long serialVersionUID = 905716872;

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.KEY</code>. 「key」- 限定记录ID
     */
    @Override
    public RResourceMatrixRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.KEY</code>. 「key」- 限定记录ID
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.USER_ID</code>. 「userId」- 限定用户ID
     */
    @Override
    public RResourceMatrixRecord setUserId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.USER_ID</code>. 「userId」- 限定用户ID
     */
    @Override
    public String getUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.RESOURCE_ID</code>. 「resourceId」- 关联资源ID
     */
    @Override
    public RResourceMatrixRecord setResourceId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.RESOURCE_ID</code>. 「resourceId」- 关联资源ID
     */
    @Override
    public String getResourceId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.PROJECTION</code>. 「projection」- 该资源的列定义（单用户处理）
     */
    @Override
    public RResourceMatrixRecord setProjection(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.PROJECTION</code>. 「projection」- 该资源的列定义（单用户处理）
     */
    @Override
    public String getProjection() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.QUERY</code>. 「query」- 该资源的行查询（单用户处理）
     */
    @Override
    public RResourceMatrixRecord setQuery(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.QUERY</code>. 「query」- 该资源的行查询（单用户处理）
     */
    @Override
    public String getQuery() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.MODE_PROJECTION</code>. 「modeProject」- 资源过滤模式
     */
    @Override
    public RResourceMatrixRecord setModeProjection(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.MODE_PROJECTION</code>. 「modeProject」- 资源过滤模式
     */
    @Override
    public String getModeProjection() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.MODE_QUERY</code>. 「modeQuery」- 资源查询模式
     */
    @Override
    public RResourceMatrixRecord setModeQuery(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.MODE_QUERY</code>. 「modeQuery」- 资源查询模式
     */
    @Override
    public String getModeQuery() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_RBAC.R_RESOURCE_MATRIX.SIGMA</code>. 「sigma」- 所属APP的APPKEY
     */
    @Override
    public RResourceMatrixRecord setSigma(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_RBAC.R_RESOURCE_MATRIX.SIGMA</code>. 「sigma」- 所属APP的APPKEY
     */
    @Override
    public String getSigma() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, String, String, String, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return RResourceMatrix.R_RESOURCE_MATRIX.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return RResourceMatrix.R_RESOURCE_MATRIX.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return RResourceMatrix.R_RESOURCE_MATRIX.RESOURCE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return RResourceMatrix.R_RESOURCE_MATRIX.PROJECTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return RResourceMatrix.R_RESOURCE_MATRIX.QUERY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return RResourceMatrix.R_RESOURCE_MATRIX.MODE_PROJECTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return RResourceMatrix.R_RESOURCE_MATRIX.MODE_QUERY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return RResourceMatrix.R_RESOURCE_MATRIX.SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getResourceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getProjection();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getQuery();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getModeProjection();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getModeQuery();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getResourceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getProjection();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getQuery();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getModeProjection();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getModeQuery();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RResourceMatrixRecord value1(String value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RResourceMatrixRecord value2(String value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RResourceMatrixRecord value3(String value) {
        setResourceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RResourceMatrixRecord value4(String value) {
        setProjection(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RResourceMatrixRecord value5(String value) {
        setQuery(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RResourceMatrixRecord value6(String value) {
        setModeProjection(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RResourceMatrixRecord value7(String value) {
        setModeQuery(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RResourceMatrixRecord value8(String value) {
        setSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RResourceMatrixRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IRResourceMatrix from) {
        setKey(from.getKey());
        setUserId(from.getUserId());
        setResourceId(from.getResourceId());
        setProjection(from.getProjection());
        setQuery(from.getQuery());
        setModeProjection(from.getModeProjection());
        setModeQuery(from.getModeQuery());
        setSigma(from.getSigma());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IRResourceMatrix> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RResourceMatrixRecord
     */
    public RResourceMatrixRecord() {
        super(RResourceMatrix.R_RESOURCE_MATRIX);
    }

    /**
     * Create a detached, initialised RResourceMatrixRecord
     */
    public RResourceMatrixRecord(String key, String userId, String resourceId, String projection, String query, String modeProjection, String modeQuery, String sigma) {
        super(RResourceMatrix.R_RESOURCE_MATRIX);

        set(0, key);
        set(1, userId);
        set(2, resourceId);
        set(3, projection);
        set(4, query);
        set(5, modeProjection);
        set(6, modeQuery);
        set(7, sigma);
    }
}
