/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ambient.domain.tables.records;


import cn.vertxup.ambient.domain.tables.XActivityChange;
import cn.vertxup.ambient.domain.tables.interfaces.IXActivityChange;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XActivityChangeRecord extends UpdatableRecordImpl<XActivityChangeRecord> implements Record15<String, String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String>, IXActivityChange {

    private static final long serialVersionUID = -1318794271;

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.KEY</code>. 「key」- 操作行为主键
     */
    @Override
    public XActivityChangeRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.KEY</code>. 「key」- 操作行为主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.ACTIVITY_ID</code>. 「activityId」- 关联的操作ID
     */
    @Override
    public XActivityChangeRecord setActivityId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.ACTIVITY_ID</code>. 「activityId」- 关联的操作ID
     */
    @Override
    public String getActivityId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.TYPE</code>. 「type」- 字段变更类型：ADD | DELETE | UPDATE 三种
     */
    @Override
    public XActivityChangeRecord setType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.TYPE</code>. 「type」- 字段变更类型：ADD | DELETE | UPDATE 三种
     */
    @Override
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.FIELD_NAME</code>. 「fieldName」- 如果是变更记录则需要生成变更日志
     */
    @Override
    public XActivityChangeRecord setFieldName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.FIELD_NAME</code>. 「fieldName」- 如果是变更记录则需要生成变更日志
     */
    @Override
    public String getFieldName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.FIELD_TYPE</code>. 「fieldType」- 变更字段的数据类型，直接从模型定义中读取
     */
    @Override
    public XActivityChangeRecord setFieldType(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.FIELD_TYPE</code>. 「fieldType」- 变更字段的数据类型，直接从模型定义中读取
     */
    @Override
    public String getFieldType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.VALUE_OLD</code>. 「valueOld」- 旧值
     */
    @Override
    public XActivityChangeRecord setValueOld(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.VALUE_OLD</code>. 「valueOld」- 旧值
     */
    @Override
    public String getValueOld() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.VALUE_NEW</code>. 「valueNew」- 新值
     */
    @Override
    public XActivityChangeRecord setValueNew(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.VALUE_NEW</code>. 「valueNew」- 新值
     */
    @Override
    public String getValueNew() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.SIGMA</code>. 「sigma」- 用户组绑定的统一标识
     */
    @Override
    public XActivityChangeRecord setSigma(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.SIGMA</code>. 「sigma」- 用户组绑定的统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public XActivityChangeRecord setLanguage(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public XActivityChangeRecord setActive(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public XActivityChangeRecord setMetadata(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public XActivityChangeRecord setCreatedAt(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public XActivityChangeRecord setCreatedBy(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public XActivityChangeRecord setUpdatedAt(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public XActivityChangeRecord setUpdatedBy(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_CHANGE.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row15) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return XActivityChange.X_ACTIVITY_CHANGE.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return XActivityChange.X_ACTIVITY_CHANGE.ACTIVITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return XActivityChange.X_ACTIVITY_CHANGE.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return XActivityChange.X_ACTIVITY_CHANGE.FIELD_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return XActivityChange.X_ACTIVITY_CHANGE.FIELD_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return XActivityChange.X_ACTIVITY_CHANGE.VALUE_OLD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return XActivityChange.X_ACTIVITY_CHANGE.VALUE_NEW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return XActivityChange.X_ACTIVITY_CHANGE.SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return XActivityChange.X_ACTIVITY_CHANGE.LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field10() {
        return XActivityChange.X_ACTIVITY_CHANGE.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return XActivityChange.X_ACTIVITY_CHANGE.METADATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field12() {
        return XActivityChange.X_ACTIVITY_CHANGE.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return XActivityChange.X_ACTIVITY_CHANGE.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field14() {
        return XActivityChange.X_ACTIVITY_CHANGE.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return XActivityChange.X_ACTIVITY_CHANGE.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getActivityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getFieldName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getFieldType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getValueOld();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getValueNew();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component10() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component12() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component14() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getActivityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getFieldName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getFieldType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getValueOld();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getValueNew();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value10() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value12() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value14() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord value1(String value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord value2(String value) {
        setActivityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord value3(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord value4(String value) {
        setFieldName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord value5(String value) {
        setFieldType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord value6(String value) {
        setValueOld(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord value7(String value) {
        setValueNew(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord value8(String value) {
        setSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord value9(String value) {
        setLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord value10(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord value11(String value) {
        setMetadata(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord value12(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord value13(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord value14(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord value15(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XActivityChangeRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, Boolean value10, String value11, LocalDateTime value12, String value13, LocalDateTime value14, String value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IXActivityChange from) {
        setKey(from.getKey());
        setActivityId(from.getActivityId());
        setType(from.getType());
        setFieldName(from.getFieldName());
        setFieldType(from.getFieldType());
        setValueOld(from.getValueOld());
        setValueNew(from.getValueNew());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IXActivityChange> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached XActivityChangeRecord
     */
    public XActivityChangeRecord() {
        super(XActivityChange.X_ACTIVITY_CHANGE);
    }

    /**
     * Create a detached, initialised XActivityChangeRecord
     */
    public XActivityChangeRecord(String key, String activityId, String type, String fieldName, String fieldType, String valueOld, String valueNew, String sigma, String language, Boolean active, String metadata, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(XActivityChange.X_ACTIVITY_CHANGE);

        set(0, key);
        set(1, activityId);
        set(2, type);
        set(3, fieldName);
        set(4, fieldType);
        set(5, valueOld);
        set(6, valueNew);
        set(7, sigma);
        set(8, language);
        set(9, active);
        set(10, metadata);
        set(11, createdAt);
        set(12, createdBy);
        set(13, updatedAt);
        set(14, updatedBy);
    }
}
