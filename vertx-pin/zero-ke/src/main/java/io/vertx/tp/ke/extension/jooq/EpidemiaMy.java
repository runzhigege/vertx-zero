package io.vertx.tp.ke.extension.jooq;

import io.vertx.core.Future;
import io.vertx.core.json.JsonArray;
import io.vertx.core.json.JsonObject;
import io.vertx.up.aiki.UxJooq;

/*
 * Column implementation by some specific definition
 * Only full column contains render part for different usage
 */
public interface EpidemiaMy {

    EpidemiaMy on(UxJooq jooq);

    /*
     * Read my columns with filters here.
     * config is generated by IxModule Object.
     */
    Future<JsonArray> fetchMy(JsonObject config);

    /*
     * Save my columns with filters here.
     * config is generated by IxModule Object.
     * 1) Read full columns list from ColumnStub ( zero-ui implementation )
     * 2) Read my columns from config
     * {
     *     "identifier": "xxx",
     *     "sigma": "yyy"
     * }
     * 3) Save my columns
     * -- 3.1) Select projection result ( calculation )
     * -- 3.2) Input select projection result
     * -- 3.3) Modification for identifier projection
     */
    Future<JsonArray> saveMy(String resourceId, JsonArray projection);
}
