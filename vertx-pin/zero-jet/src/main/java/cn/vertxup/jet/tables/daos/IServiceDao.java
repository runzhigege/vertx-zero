/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.jet.tables.daos;


import cn.vertxup.jet.tables.IService;
import cn.vertxup.jet.tables.records.IServiceRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IServiceDao extends DAOImpl<IServiceRecord, cn.vertxup.jet.tables.pojos.IService, String> implements VertxDAO<cn.vertxup.jet.tables.records.IServiceRecord,cn.vertxup.jet.tables.pojos.IService,java.lang.String> {

    /**
     * Create a new IServiceDao without any configuration
     */
    public IServiceDao() {
        super(IService.I_SERVICE, cn.vertxup.jet.tables.pojos.IService.class);
    }

    /**
     * Create a new IServiceDao with an attached configuration
     */
    public IServiceDao(Configuration configuration) {
        super(IService.I_SERVICE, cn.vertxup.jet.tables.pojos.IService.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.jet.tables.pojos.IService object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByKey(String... values) {
        return fetch(IService.I_SERVICE.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.jet.tables.pojos.IService fetchOneByKey(String value) {
        return fetchOne(IService.I_SERVICE.KEY, value);
    }

    /**
     * Fetch records that have <code>NAMESPACE IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByNamespace(String... values) {
        return fetch(IService.I_SERVICE.NAMESPACE, values);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByName(String... values) {
        return fetch(IService.I_SERVICE.NAME, values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByComment(String... values) {
        return fetch(IService.I_SERVICE.COMMENT, values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByType(String... values) {
        return fetch(IService.I_SERVICE.TYPE, values);
    }

    /**
     * Fetch records that have <code>IS_WORKFLOW IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByIsWorkflow(Boolean... values) {
        return fetch(IService.I_SERVICE.IS_WORKFLOW, values);
    }

    /**
     * Fetch records that have <code>IS_GRAPHIC IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByIsGraphic(Boolean... values) {
        return fetch(IService.I_SERVICE.IS_GRAPHIC, values);
    }

    /**
     * Fetch records that have <code>IN_SCRIPT IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByInScript(String... values) {
        return fetch(IService.I_SERVICE.IN_SCRIPT, values);
    }

    /**
     * Fetch records that have <code>OUT_SCRIPT IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByOutScript(String... values) {
        return fetch(IService.I_SERVICE.OUT_SCRIPT, values);
    }

    /**
     * Fetch records that have <code>SERVICE_CHANNEL IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByServiceChannel(String... values) {
        return fetch(IService.I_SERVICE.SERVICE_CHANNEL, values);
    }

    /**
     * Fetch records that have <code>SERVICE_COMPONENT IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByServiceComponent(String... values) {
        return fetch(IService.I_SERVICE.SERVICE_COMPONENT, values);
    }

    /**
     * Fetch records that have <code>SERVICE_CONFIG IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByServiceConfig(String... values) {
        return fetch(IService.I_SERVICE.SERVICE_CONFIG, values);
    }

    /**
     * Fetch records that have <code>SERVICE_SPEC IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByServiceSpec(String... values) {
        return fetch(IService.I_SERVICE.SERVICE_SPEC, values);
    }

    /**
     * Fetch records that have <code>SERVICE_RESPONSER IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByServiceResponser(String... values) {
        return fetch(IService.I_SERVICE.SERVICE_RESPONSER, values);
    }

    /**
     * Fetch records that have <code>IDENTIFIER IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByIdentifier(String... values) {
        return fetch(IService.I_SERVICE.IDENTIFIER, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchBySigma(String... values) {
        return fetch(IService.I_SERVICE.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByLanguage(String... values) {
        return fetch(IService.I_SERVICE.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByActive(Boolean... values) {
        return fetch(IService.I_SERVICE.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByMetadata(String... values) {
        return fetch(IService.I_SERVICE.METADATA, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(IService.I_SERVICE.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByCreatedBy(String... values) {
        return fetch(IService.I_SERVICE.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(IService.I_SERVICE.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.jet.tables.pojos.IService> fetchByUpdatedBy(String... values) {
        return fetch(IService.I_SERVICE.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.jet.tables.pojos.IService> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>NAMESPACE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByNamespaceAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.NAMESPACE,values);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByNameAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.NAME,values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByCommentAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.COMMENT,values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByTypeAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.TYPE,values);
    }

    /**
     * Fetch records that have <code>IS_WORKFLOW IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByIsWorkflowAsync(List<Boolean> values) {
        return fetchAsync(IService.I_SERVICE.IS_WORKFLOW,values);
    }

    /**
     * Fetch records that have <code>IS_GRAPHIC IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByIsGraphicAsync(List<Boolean> values) {
        return fetchAsync(IService.I_SERVICE.IS_GRAPHIC,values);
    }

    /**
     * Fetch records that have <code>IN_SCRIPT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByInScriptAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.IN_SCRIPT,values);
    }

    /**
     * Fetch records that have <code>OUT_SCRIPT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByOutScriptAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.OUT_SCRIPT,values);
    }

    /**
     * Fetch records that have <code>SERVICE_CHANNEL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByServiceChannelAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.SERVICE_CHANNEL,values);
    }

    /**
     * Fetch records that have <code>SERVICE_COMPONENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByServiceComponentAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.SERVICE_COMPONENT,values);
    }

    /**
     * Fetch records that have <code>SERVICE_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByServiceConfigAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.SERVICE_CONFIG,values);
    }

    /**
     * Fetch records that have <code>SERVICE_SPEC IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByServiceSpecAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.SERVICE_SPEC,values);
    }

    /**
     * Fetch records that have <code>SERVICE_RESPONSER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByServiceResponserAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.SERVICE_RESPONSER,values);
    }

    /**
     * Fetch records that have <code>IDENTIFIER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByIdentifierAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.IDENTIFIER,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(IService.I_SERVICE.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.METADATA,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(IService.I_SERVICE.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(IService.I_SERVICE.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.tables.pojos.IService>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(IService.I_SERVICE.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
