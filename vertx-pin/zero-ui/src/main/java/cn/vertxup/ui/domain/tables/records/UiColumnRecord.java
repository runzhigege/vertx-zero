/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ui.domain.tables.records;


import cn.vertxup.ui.domain.tables.UiColumn;
import cn.vertxup.ui.domain.tables.interfaces.IUiColumn;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UiColumnRecord extends UpdatableRecordImpl<UiColumnRecord> implements Record15<String, String, String, String, Integer, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String>, IUiColumn {

    private static final long serialVersionUID = -784891228;

    /**
     * Setter for <code>DB_ETERNAL.UI_COLUMN.KEY</code>. 「key」- 列主键
     */
    @Override
    public UiColumnRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_COLUMN.KEY</code>. 「key」- 列主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_COLUMN.TITLE</code>. 「title」- 列标题
     */
    @Override
    public UiColumnRecord setTitle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_COLUMN.TITLE</code>. 「title」- 列标题
     */
    @Override
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_COLUMN.DATA_INDEX</code>. 「dataIndex」- 列名
     */
    @Override
    public UiColumnRecord setDataIndex(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_COLUMN.DATA_INDEX</code>. 「dataIndex」- 列名
     */
    @Override
    public String getDataIndex() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_COLUMN.RENDER</code>. 「render」- 使用的Render函数
     */
    @Override
    public UiColumnRecord setRender(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_COLUMN.RENDER</code>. 「render」- 使用的Render函数
     */
    @Override
    public String getRender() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_COLUMN.WIDTH</code>. 「width」- 当前列的宽度
     */
    @Override
    public UiColumnRecord setWidth(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_COLUMN.WIDTH</code>. 「width」- 当前列的宽度
     */
    @Override
    public Integer getWidth() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_COLUMN.CLASS_NAME</code>. 「className」- 当前列的特殊CSS类
     */
    @Override
    public UiColumnRecord setClassName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_COLUMN.CLASS_NAME</code>. 「className」- 当前列的特殊CSS类
     */
    @Override
    public String getClassName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_COLUMN.CONTROL_ID</code>. 「controlId」- 关联的控件ID
     */
    @Override
    public UiColumnRecord setControlId(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_COLUMN.CONTROL_ID</code>. 「controlId」- 关联的控件ID
     */
    @Override
    public String getControlId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_COLUMN.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public UiColumnRecord setActive(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_COLUMN.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_COLUMN.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public UiColumnRecord setSigma(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_COLUMN.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_COLUMN.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public UiColumnRecord setMetadata(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_COLUMN.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_COLUMN.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public UiColumnRecord setLanguage(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_COLUMN.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_COLUMN.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public UiColumnRecord setCreatedAt(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_COLUMN.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_COLUMN.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public UiColumnRecord setCreatedBy(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_COLUMN.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_COLUMN.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public UiColumnRecord setUpdatedAt(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_COLUMN.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_COLUMN.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public UiColumnRecord setUpdatedBy(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_COLUMN.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, String, String, String, Integer, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, String, String, String, Integer, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row15) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return UiColumn.UI_COLUMN.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return UiColumn.UI_COLUMN.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return UiColumn.UI_COLUMN.DATA_INDEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return UiColumn.UI_COLUMN.RENDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return UiColumn.UI_COLUMN.WIDTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return UiColumn.UI_COLUMN.CLASS_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return UiColumn.UI_COLUMN.CONTROL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return UiColumn.UI_COLUMN.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return UiColumn.UI_COLUMN.SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return UiColumn.UI_COLUMN.METADATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return UiColumn.UI_COLUMN.LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field12() {
        return UiColumn.UI_COLUMN.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return UiColumn.UI_COLUMN.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field14() {
        return UiColumn.UI_COLUMN.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return UiColumn.UI_COLUMN.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDataIndex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getRender();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getWidth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getClassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getControlId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component8() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component12() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component14() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDataIndex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getRender();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getWidth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getClassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getControlId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value12() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value14() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord value1(String value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord value2(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord value3(String value) {
        setDataIndex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord value4(String value) {
        setRender(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord value5(Integer value) {
        setWidth(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord value6(String value) {
        setClassName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord value7(String value) {
        setControlId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord value8(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord value9(String value) {
        setSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord value10(String value) {
        setMetadata(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord value11(String value) {
        setLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord value12(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord value13(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord value14(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord value15(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiColumnRecord values(String value1, String value2, String value3, String value4, Integer value5, String value6, String value7, Boolean value8, String value9, String value10, String value11, LocalDateTime value12, String value13, LocalDateTime value14, String value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IUiColumn from) {
        setKey(from.getKey());
        setTitle(from.getTitle());
        setDataIndex(from.getDataIndex());
        setRender(from.getRender());
        setWidth(from.getWidth());
        setClassName(from.getClassName());
        setControlId(from.getControlId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IUiColumn> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UiColumnRecord
     */
    public UiColumnRecord() {
        super(UiColumn.UI_COLUMN);
    }

    /**
     * Create a detached, initialised UiColumnRecord
     */
    public UiColumnRecord(String key, String title, String dataIndex, String render, Integer width, String className, String controlId, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(UiColumn.UI_COLUMN);

        set(0, key);
        set(1, title);
        set(2, dataIndex);
        set(3, render);
        set(4, width);
        set(5, className);
        set(6, controlId);
        set(7, active);
        set(8, sigma);
        set(9, metadata);
        set(10, language);
        set(11, createdAt);
        set(12, createdBy);
        set(13, updatedAt);
        set(14, updatedBy);
    }
}
