/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ui.domain.tables.pojos;


import cn.vertxup.ui.domain.tables.interfaces.IUiAjax;

import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UiAjax implements IUiAjax {

    private static final long serialVersionUID = 1557877661;

    private String        key;
    private String        name;
    private String        uri;
    private String        method;
    private Boolean       query;
    private String        projection;
    private String        pager;
    private String        sorter;
    private String        criteria;
    private Boolean       active;
    private String        sigma;
    private String        metadata;
    private String        language;
    private LocalDateTime createdAt;
    private String        createdBy;
    private LocalDateTime updatedAt;
    private String        updatedBy;

    public UiAjax() {}

    public UiAjax(UiAjax value) {
        this.key = value.key;
        this.name = value.name;
        this.uri = value.uri;
        this.method = value.method;
        this.query = value.query;
        this.projection = value.projection;
        this.pager = value.pager;
        this.sorter = value.sorter;
        this.criteria = value.criteria;
        this.active = value.active;
        this.sigma = value.sigma;
        this.metadata = value.metadata;
        this.language = value.language;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
    }

    public UiAjax(
        String        key,
        String        name,
        String        uri,
        String        method,
        Boolean       query,
        String        projection,
        String        pager,
        String        sorter,
        String        criteria,
        Boolean       active,
        String        sigma,
        String        metadata,
        String        language,
        LocalDateTime createdAt,
        String        createdBy,
        LocalDateTime updatedAt,
        String        updatedBy
    ) {
        this.key = key;
        this.name = name;
        this.uri = uri;
        this.method = method;
        this.query = query;
        this.projection = projection;
        this.pager = pager;
        this.sorter = sorter;
        this.criteria = criteria;
        this.active = active;
        this.sigma = sigma;
        this.metadata = metadata;
        this.language = language;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

    @Override
    public String getKey() {
        return this.key;
    }

    @Override
    public UiAjax setKey(String key) {
        this.key = key;
        return this;
    }

    @Override
    public String getName() {
        return this.name;
    }

    @Override
    public UiAjax setName(String name) {
        this.name = name;
        return this;
    }

    @Override
    public String getUri() {
        return this.uri;
    }

    @Override
    public UiAjax setUri(String uri) {
        this.uri = uri;
        return this;
    }

    @Override
    public String getMethod() {
        return this.method;
    }

    @Override
    public UiAjax setMethod(String method) {
        this.method = method;
        return this;
    }

    @Override
    public Boolean getQuery() {
        return this.query;
    }

    @Override
    public UiAjax setQuery(Boolean query) {
        this.query = query;
        return this;
    }

    @Override
    public String getProjection() {
        return this.projection;
    }

    @Override
    public UiAjax setProjection(String projection) {
        this.projection = projection;
        return this;
    }

    @Override
    public String getPager() {
        return this.pager;
    }

    @Override
    public UiAjax setPager(String pager) {
        this.pager = pager;
        return this;
    }

    @Override
    public String getSorter() {
        return this.sorter;
    }

    @Override
    public UiAjax setSorter(String sorter) {
        this.sorter = sorter;
        return this;
    }

    @Override
    public String getCriteria() {
        return this.criteria;
    }

    @Override
    public UiAjax setCriteria(String criteria) {
        this.criteria = criteria;
        return this;
    }

    @Override
    public Boolean getActive() {
        return this.active;
    }

    @Override
    public UiAjax setActive(Boolean active) {
        this.active = active;
        return this;
    }

    @Override
    public String getSigma() {
        return this.sigma;
    }

    @Override
    public UiAjax setSigma(String sigma) {
        this.sigma = sigma;
        return this;
    }

    @Override
    public String getMetadata() {
        return this.metadata;
    }

    @Override
    public UiAjax setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    @Override
    public String getLanguage() {
        return this.language;
    }

    @Override
    public UiAjax setLanguage(String language) {
        this.language = language;
        return this;
    }

    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    @Override
    public UiAjax setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    @Override
    public UiAjax setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    @Override
    public UiAjax setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    @Override
    public UiAjax setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UiAjax (");

        sb.append(key);
        sb.append(", ").append(name);
        sb.append(", ").append(uri);
        sb.append(", ").append(method);
        sb.append(", ").append(query);
        sb.append(", ").append(projection);
        sb.append(", ").append(pager);
        sb.append(", ").append(sorter);
        sb.append(", ").append(criteria);
        sb.append(", ").append(active);
        sb.append(", ").append(sigma);
        sb.append(", ").append(metadata);
        sb.append(", ").append(language);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IUiAjax from) {
        setKey(from.getKey());
        setName(from.getName());
        setUri(from.getUri());
        setMethod(from.getMethod());
        setQuery(from.getQuery());
        setProjection(from.getProjection());
        setPager(from.getPager());
        setSorter(from.getSorter());
        setCriteria(from.getCriteria());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IUiAjax> E into(E into) {
        into.from(this);
        return into;
    }

    public UiAjax(io.vertx.core.json.JsonObject json) {
        fromJson(json);
    }
}
