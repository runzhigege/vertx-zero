/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ui.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IUiField extends Serializable {

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.KEY</code>. 「key」- 字段主键
     */
    public IUiField setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.KEY</code>. 「key」- 字段主键
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.X_POINT</code>. 「xPoint] - 字段的X坐标（列）
     */
    public IUiField setXPoint(Integer value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.X_POINT</code>. 「xPoint] - 字段的X坐标（列）
     */
    public Integer getXPoint();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.Y_POINT</code>. 「yPoint」- 字段的Y坐标（行）
     */
    public IUiField setYPoint(Integer value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.Y_POINT</code>. 「yPoint」- 字段的Y坐标（行）
     */
    public Integer getYPoint();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.LABEL</code>. 「label」- 字段标签
     */
    public IUiField setLabel(String value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.LABEL</code>. 「label」- 字段标签
     */
    public String getLabel();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.NAME</code>. 「name」- 字段名称
     */
    public IUiField setName(String value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.NAME</code>. 「name」- 字段名称
     */
    public String getName();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.SPAN</code>. 「span」- 字段宽度
     */
    public IUiField setSpan(Integer value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.SPAN</code>. 「span」- 字段宽度
     */
    public Integer getSpan();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.RENDER</code>. 「render」- 使用的Render函数
     */
    public IUiField setRender(String value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.RENDER</code>. 「render」- 使用的Render函数
     */
    public String getRender();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.OPTION_JSX</code>. 「optionJsx」- 字段专用配置
     */
    public IUiField setOptionJsx(String value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.OPTION_JSX</code>. 「optionJsx」- 字段专用配置
     */
    public String getOptionJsx();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.OPTION_CONFIG</code>. 「optionConfig」- 字段专用配置
     */
    public IUiField setOptionConfig(String value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.OPTION_CONFIG</code>. 「optionConfig」- 字段专用配置
     */
    public String getOptionConfig();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.OPTION_ITEM</code>. 「optionItem」- 字段专用配置
     */
    public IUiField setOptionItem(String value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.OPTION_ITEM</code>. 「optionItem」- 字段专用配置
     */
    public String getOptionItem();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.RULES</code>. 「rules」- 专用的配置，描述规则
     */
    public IUiField setRules(String value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.RULES</code>. 「rules」- 专用的配置，描述规则
     */
    public String getRules();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.DATA_EVENT</code>. 「dataEvent」- 当前字段的事件配置，只有名称为 $button 时生效
     */
    public IUiField setDataEvent(String value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.DATA_EVENT</code>. 「dataEvent」- 当前字段的事件配置，只有名称为 $button 时生效
     */
    public String getDataEvent();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.FORM_ID</code>. 「formId」- 关联的表单ID
     */
    public IUiField setFormId(String value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.FORM_ID</code>. 「formId」- 关联的表单ID
     */
    public String getFormId();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.ACTIVE</code>. 「active」- 是否启用
     */
    public IUiField setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.SIGMA</code>. 「sigma」- 统一标识
     */
    public IUiField setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.METADATA</code>. 「metadata」- 附加配置
     */
    public IUiField setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.METADATA</code>. 「metadata」- 附加配置
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IUiField setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IUiField setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IUiField setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IUiField setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.UI_FIELD.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IUiField setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.UI_FIELD.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IUiField
     */
    public void from(cn.vertxup.ui.tables.interfaces.IUiField from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IUiField
     */
    public <E extends cn.vertxup.ui.tables.interfaces.IUiField> E into(E into);

    default IUiField fromJson(io.vertx.core.json.JsonObject json) {
        setKey(json.getString("KEY"));
        setXPoint(json.getInteger("X_POINT"));
        setYPoint(json.getInteger("Y_POINT"));
        setLabel(json.getString("LABEL"));
        setName(json.getString("NAME"));
        setSpan(json.getInteger("SPAN"));
        setRender(json.getString("RENDER"));
        setOptionJsx(json.getString("OPTION_JSX"));
        setOptionConfig(json.getString("OPTION_CONFIG"));
        setOptionItem(json.getString("OPTION_ITEM"));
        setRules(json.getString("RULES"));
        setDataEvent(json.getString("DATA_EVENT"));
        setFormId(json.getString("FORM_ID"));
        setActive(json.getBoolean("ACTIVE"));
        setSigma(json.getString("SIGMA"));
        setMetadata(json.getString("METADATA"));
        setLanguage(json.getString("LANGUAGE"));
        // Omitting unrecognized type java.time.LocalDateTime for column CREATED_AT!
        setCreatedBy(json.getString("CREATED_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column UPDATED_AT!
        setUpdatedBy(json.getString("UPDATED_BY"));
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("KEY",getKey());
        json.put("X_POINT",getXPoint());
        json.put("Y_POINT",getYPoint());
        json.put("LABEL",getLabel());
        json.put("NAME",getName());
        json.put("SPAN",getSpan());
        json.put("RENDER",getRender());
        json.put("OPTION_JSX",getOptionJsx());
        json.put("OPTION_CONFIG",getOptionConfig());
        json.put("OPTION_ITEM",getOptionItem());
        json.put("RULES",getRules());
        json.put("DATA_EVENT",getDataEvent());
        json.put("FORM_ID",getFormId());
        json.put("ACTIVE",getActive());
        json.put("SIGMA",getSigma());
        json.put("METADATA",getMetadata());
        json.put("LANGUAGE",getLanguage());
        // Omitting unrecognized type java.time.LocalDateTime for column CREATED_AT!
        json.put("CREATED_BY",getCreatedBy());
        // Omitting unrecognized type java.time.LocalDateTime for column UPDATED_AT!
        json.put("UPDATED_BY",getUpdatedBy());
        return json;
    }

}
