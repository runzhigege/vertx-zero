/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ui.domain.tables.pojos;


import cn.vertxup.ui.domain.tables.interfaces.IUiEvent;

import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UiEvent implements IUiEvent {

    private static final long serialVersionUID = -1455606345;

    private String        key;
    private String        actionId;
    private String        target;
    private String        relatedType;
    private String        relatedId;
    private String        ajax;
    private String        mode;
    private String        modal;
    private String        query;
    private String        connector;
    private String        file;
    private String        rules;
    private String        dataMagic;
    private String        dataArguments;
    private Boolean       active;
    private String        sigma;
    private String        metadata;
    private String        language;
    private LocalDateTime createdAt;
    private String        createdBy;
    private LocalDateTime updatedAt;
    private String        updatedBy;

    public UiEvent() {}

    public UiEvent(UiEvent value) {
        this.key = value.key;
        this.actionId = value.actionId;
        this.target = value.target;
        this.relatedType = value.relatedType;
        this.relatedId = value.relatedId;
        this.ajax = value.ajax;
        this.mode = value.mode;
        this.modal = value.modal;
        this.query = value.query;
        this.connector = value.connector;
        this.file = value.file;
        this.rules = value.rules;
        this.dataMagic = value.dataMagic;
        this.dataArguments = value.dataArguments;
        this.active = value.active;
        this.sigma = value.sigma;
        this.metadata = value.metadata;
        this.language = value.language;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
    }

    public UiEvent(
        String        key,
        String        actionId,
        String        target,
        String        relatedType,
        String        relatedId,
        String        ajax,
        String        mode,
        String        modal,
        String        query,
        String        connector,
        String        file,
        String        rules,
        String        dataMagic,
        String        dataArguments,
        Boolean       active,
        String        sigma,
        String        metadata,
        String        language,
        LocalDateTime createdAt,
        String        createdBy,
        LocalDateTime updatedAt,
        String        updatedBy
    ) {
        this.key = key;
        this.actionId = actionId;
        this.target = target;
        this.relatedType = relatedType;
        this.relatedId = relatedId;
        this.ajax = ajax;
        this.mode = mode;
        this.modal = modal;
        this.query = query;
        this.connector = connector;
        this.file = file;
        this.rules = rules;
        this.dataMagic = dataMagic;
        this.dataArguments = dataArguments;
        this.active = active;
        this.sigma = sigma;
        this.metadata = metadata;
        this.language = language;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

    @Override
    public String getKey() {
        return this.key;
    }

    @Override
    public UiEvent setKey(String key) {
        this.key = key;
        return this;
    }

    @Override
    public String getActionId() {
        return this.actionId;
    }

    @Override
    public UiEvent setActionId(String actionId) {
        this.actionId = actionId;
        return this;
    }

    @Override
    public String getTarget() {
        return this.target;
    }

    @Override
    public UiEvent setTarget(String target) {
        this.target = target;
        return this;
    }

    @Override
    public String getRelatedType() {
        return this.relatedType;
    }

    @Override
    public UiEvent setRelatedType(String relatedType) {
        this.relatedType = relatedType;
        return this;
    }

    @Override
    public String getRelatedId() {
        return this.relatedId;
    }

    @Override
    public UiEvent setRelatedId(String relatedId) {
        this.relatedId = relatedId;
        return this;
    }

    @Override
    public String getAjax() {
        return this.ajax;
    }

    @Override
    public UiEvent setAjax(String ajax) {
        this.ajax = ajax;
        return this;
    }

    @Override
    public String getMode() {
        return this.mode;
    }

    @Override
    public UiEvent setMode(String mode) {
        this.mode = mode;
        return this;
    }

    @Override
    public String getModal() {
        return this.modal;
    }

    @Override
    public UiEvent setModal(String modal) {
        this.modal = modal;
        return this;
    }

    @Override
    public String getQuery() {
        return this.query;
    }

    @Override
    public UiEvent setQuery(String query) {
        this.query = query;
        return this;
    }

    @Override
    public String getConnector() {
        return this.connector;
    }

    @Override
    public UiEvent setConnector(String connector) {
        this.connector = connector;
        return this;
    }

    @Override
    public String getFile() {
        return this.file;
    }

    @Override
    public UiEvent setFile(String file) {
        this.file = file;
        return this;
    }

    @Override
    public String getRules() {
        return this.rules;
    }

    @Override
    public UiEvent setRules(String rules) {
        this.rules = rules;
        return this;
    }

    @Override
    public String getDataMagic() {
        return this.dataMagic;
    }

    @Override
    public UiEvent setDataMagic(String dataMagic) {
        this.dataMagic = dataMagic;
        return this;
    }

    @Override
    public String getDataArguments() {
        return this.dataArguments;
    }

    @Override
    public UiEvent setDataArguments(String dataArguments) {
        this.dataArguments = dataArguments;
        return this;
    }

    @Override
    public Boolean getActive() {
        return this.active;
    }

    @Override
    public UiEvent setActive(Boolean active) {
        this.active = active;
        return this;
    }

    @Override
    public String getSigma() {
        return this.sigma;
    }

    @Override
    public UiEvent setSigma(String sigma) {
        this.sigma = sigma;
        return this;
    }

    @Override
    public String getMetadata() {
        return this.metadata;
    }

    @Override
    public UiEvent setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    @Override
    public String getLanguage() {
        return this.language;
    }

    @Override
    public UiEvent setLanguage(String language) {
        this.language = language;
        return this;
    }

    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    @Override
    public UiEvent setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    @Override
    public UiEvent setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    @Override
    public UiEvent setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    @Override
    public UiEvent setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UiEvent (");

        sb.append(key);
        sb.append(", ").append(actionId);
        sb.append(", ").append(target);
        sb.append(", ").append(relatedType);
        sb.append(", ").append(relatedId);
        sb.append(", ").append(ajax);
        sb.append(", ").append(mode);
        sb.append(", ").append(modal);
        sb.append(", ").append(query);
        sb.append(", ").append(connector);
        sb.append(", ").append(file);
        sb.append(", ").append(rules);
        sb.append(", ").append(dataMagic);
        sb.append(", ").append(dataArguments);
        sb.append(", ").append(active);
        sb.append(", ").append(sigma);
        sb.append(", ").append(metadata);
        sb.append(", ").append(language);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IUiEvent from) {
        setKey(from.getKey());
        setActionId(from.getActionId());
        setTarget(from.getTarget());
        setRelatedType(from.getRelatedType());
        setRelatedId(from.getRelatedId());
        setAjax(from.getAjax());
        setMode(from.getMode());
        setModal(from.getModal());
        setQuery(from.getQuery());
        setConnector(from.getConnector());
        setFile(from.getFile());
        setRules(from.getRules());
        setDataMagic(from.getDataMagic());
        setDataArguments(from.getDataArguments());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IUiEvent> E into(E into) {
        into.from(this);
        return into;
    }

    public UiEvent(io.vertx.core.json.JsonObject json) {
        fromJson(json);
    }
}
