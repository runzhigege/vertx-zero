/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ui.domain.tables.daos;


import cn.vertxup.ui.domain.tables.UiEvent;
import cn.vertxup.ui.domain.tables.records.UiEventRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UiEventDao extends DAOImpl<UiEventRecord, cn.vertxup.ui.domain.tables.pojos.UiEvent, String> implements VertxDAO<cn.vertxup.ui.domain.tables.records.UiEventRecord,cn.vertxup.ui.domain.tables.pojos.UiEvent,java.lang.String> {

    /**
     * Create a new UiEventDao without any configuration
     */
    public UiEventDao() {
        super(UiEvent.UI_EVENT, cn.vertxup.ui.domain.tables.pojos.UiEvent.class);
    }

    /**
     * Create a new UiEventDao with an attached configuration
     */
    public UiEventDao(Configuration configuration) {
        super(UiEvent.UI_EVENT, cn.vertxup.ui.domain.tables.pojos.UiEvent.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.ui.domain.tables.pojos.UiEvent object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByKey(String... values) {
        return fetch(UiEvent.UI_EVENT.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.ui.domain.tables.pojos.UiEvent fetchOneByKey(String value) {
        return fetchOne(UiEvent.UI_EVENT.KEY, value);
    }

    /**
     * Fetch records that have <code>ACTION_ID IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByActionId(String... values) {
        return fetch(UiEvent.UI_EVENT.ACTION_ID, values);
    }

    /**
     * Fetch records that have <code>TARGET IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByTarget(String... values) {
        return fetch(UiEvent.UI_EVENT.TARGET, values);
    }

    /**
     * Fetch records that have <code>RELATED_TYPE IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByRelatedType(String... values) {
        return fetch(UiEvent.UI_EVENT.RELATED_TYPE, values);
    }

    /**
     * Fetch records that have <code>RELATED_ID IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByRelatedId(String... values) {
        return fetch(UiEvent.UI_EVENT.RELATED_ID, values);
    }

    /**
     * Fetch records that have <code>AJAX IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByAjax(String... values) {
        return fetch(UiEvent.UI_EVENT.AJAX, values);
    }

    /**
     * Fetch records that have <code>MODE IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByMode(String... values) {
        return fetch(UiEvent.UI_EVENT.MODE, values);
    }

    /**
     * Fetch records that have <code>MODAL IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByModal(String... values) {
        return fetch(UiEvent.UI_EVENT.MODAL, values);
    }

    /**
     * Fetch records that have <code>QUERY IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByQuery(String... values) {
        return fetch(UiEvent.UI_EVENT.QUERY, values);
    }

    /**
     * Fetch records that have <code>CONNECTOR IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByConnector(String... values) {
        return fetch(UiEvent.UI_EVENT.CONNECTOR, values);
    }

    /**
     * Fetch records that have <code>FILE IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByFile(String... values) {
        return fetch(UiEvent.UI_EVENT.FILE, values);
    }

    /**
     * Fetch records that have <code>RULES IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByRules(String... values) {
        return fetch(UiEvent.UI_EVENT.RULES, values);
    }

    /**
     * Fetch records that have <code>DATA_MAGIC IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByDataMagic(String... values) {
        return fetch(UiEvent.UI_EVENT.DATA_MAGIC, values);
    }

    /**
     * Fetch records that have <code>DATA_ARGUMENTS IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByDataArguments(String... values) {
        return fetch(UiEvent.UI_EVENT.DATA_ARGUMENTS, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByActive(Boolean... values) {
        return fetch(UiEvent.UI_EVENT.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchBySigma(String... values) {
        return fetch(UiEvent.UI_EVENT.SIGMA, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByMetadata(String... values) {
        return fetch(UiEvent.UI_EVENT.METADATA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByLanguage(String... values) {
        return fetch(UiEvent.UI_EVENT.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(UiEvent.UI_EVENT.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByCreatedBy(String... values) {
        return fetch(UiEvent.UI_EVENT.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(UiEvent.UI_EVENT.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchByUpdatedBy(String... values) {
        return fetch(UiEvent.UI_EVENT.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.ui.domain.tables.pojos.UiEvent> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>ACTION_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByActionIdAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.ACTION_ID,values);
    }

    /**
     * Fetch records that have <code>TARGET IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByTargetAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.TARGET,values);
    }

    /**
     * Fetch records that have <code>RELATED_TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByRelatedTypeAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.RELATED_TYPE,values);
    }

    /**
     * Fetch records that have <code>RELATED_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByRelatedIdAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.RELATED_ID,values);
    }

    /**
     * Fetch records that have <code>AJAX IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByAjaxAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.AJAX,values);
    }

    /**
     * Fetch records that have <code>MODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByModeAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.MODE,values);
    }

    /**
     * Fetch records that have <code>MODAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByModalAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.MODAL,values);
    }

    /**
     * Fetch records that have <code>QUERY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByQueryAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.QUERY,values);
    }

    /**
     * Fetch records that have <code>CONNECTOR IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByConnectorAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.CONNECTOR,values);
    }

    /**
     * Fetch records that have <code>FILE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByFileAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.FILE,values);
    }

    /**
     * Fetch records that have <code>RULES IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByRulesAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.RULES,values);
    }

    /**
     * Fetch records that have <code>DATA_MAGIC IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByDataMagicAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.DATA_MAGIC,values);
    }

    /**
     * Fetch records that have <code>DATA_ARGUMENTS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByDataArgumentsAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.DATA_ARGUMENTS,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(UiEvent.UI_EVENT.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.SIGMA,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.METADATA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(UiEvent.UI_EVENT.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(UiEvent.UI_EVENT.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiEvent>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(UiEvent.UI_EVENT.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
