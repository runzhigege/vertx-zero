/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ui.domain.tables.daos;


import cn.vertxup.ui.domain.tables.UiAjax;
import cn.vertxup.ui.domain.tables.records.UiAjaxRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UiAjaxDao extends DAOImpl<UiAjaxRecord, cn.vertxup.ui.domain.tables.pojos.UiAjax, String> implements VertxDAO<cn.vertxup.ui.domain.tables.records.UiAjaxRecord,cn.vertxup.ui.domain.tables.pojos.UiAjax,java.lang.String> {

    /**
     * Create a new UiAjaxDao without any configuration
     */
    public UiAjaxDao() {
        super(UiAjax.UI_AJAX, cn.vertxup.ui.domain.tables.pojos.UiAjax.class);
    }

    /**
     * Create a new UiAjaxDao with an attached configuration
     */
    public UiAjaxDao(Configuration configuration) {
        super(UiAjax.UI_AJAX, cn.vertxup.ui.domain.tables.pojos.UiAjax.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.ui.domain.tables.pojos.UiAjax object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchByKey(String... values) {
        return fetch(UiAjax.UI_AJAX.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.ui.domain.tables.pojos.UiAjax fetchOneByKey(String value) {
        return fetchOne(UiAjax.UI_AJAX.KEY, value);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchByName(String... values) {
        return fetch(UiAjax.UI_AJAX.NAME, values);
    }

    /**
     * Fetch records that have <code>URI IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchByUri(String... values) {
        return fetch(UiAjax.UI_AJAX.URI, values);
    }

    /**
     * Fetch records that have <code>METHOD IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchByMethod(String... values) {
        return fetch(UiAjax.UI_AJAX.METHOD, values);
    }

    /**
     * Fetch records that have <code>QUERY IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchByQuery(Boolean... values) {
        return fetch(UiAjax.UI_AJAX.QUERY, values);
    }

    /**
     * Fetch records that have <code>PROJECTION IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchByProjection(String... values) {
        return fetch(UiAjax.UI_AJAX.PROJECTION, values);
    }

    /**
     * Fetch records that have <code>PAGER IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchByPager(String... values) {
        return fetch(UiAjax.UI_AJAX.PAGER, values);
    }

    /**
     * Fetch records that have <code>SORTER IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchBySorter(String... values) {
        return fetch(UiAjax.UI_AJAX.SORTER, values);
    }

    /**
     * Fetch records that have <code>CRITERIA IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchByCriteria(String... values) {
        return fetch(UiAjax.UI_AJAX.CRITERIA, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchByActive(Boolean... values) {
        return fetch(UiAjax.UI_AJAX.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchBySigma(String... values) {
        return fetch(UiAjax.UI_AJAX.SIGMA, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchByMetadata(String... values) {
        return fetch(UiAjax.UI_AJAX.METADATA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchByLanguage(String... values) {
        return fetch(UiAjax.UI_AJAX.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(UiAjax.UI_AJAX.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchByCreatedBy(String... values) {
        return fetch(UiAjax.UI_AJAX.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(UiAjax.UI_AJAX.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchByUpdatedBy(String... values) {
        return fetch(UiAjax.UI_AJAX.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(UiAjax.UI_AJAX.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.ui.domain.tables.pojos.UiAjax> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchByNameAsync(List<String> values) {
        return fetchAsync(UiAjax.UI_AJAX.NAME,values);
    }

    /**
     * Fetch records that have <code>URI IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchByUriAsync(List<String> values) {
        return fetchAsync(UiAjax.UI_AJAX.URI,values);
    }

    /**
     * Fetch records that have <code>METHOD IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchByMethodAsync(List<String> values) {
        return fetchAsync(UiAjax.UI_AJAX.METHOD,values);
    }

    /**
     * Fetch records that have <code>QUERY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchByQueryAsync(List<Boolean> values) {
        return fetchAsync(UiAjax.UI_AJAX.QUERY,values);
    }

    /**
     * Fetch records that have <code>PROJECTION IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchByProjectionAsync(List<String> values) {
        return fetchAsync(UiAjax.UI_AJAX.PROJECTION,values);
    }

    /**
     * Fetch records that have <code>PAGER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchByPagerAsync(List<String> values) {
        return fetchAsync(UiAjax.UI_AJAX.PAGER,values);
    }

    /**
     * Fetch records that have <code>SORTER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchBySorterAsync(List<String> values) {
        return fetchAsync(UiAjax.UI_AJAX.SORTER,values);
    }

    /**
     * Fetch records that have <code>CRITERIA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchByCriteriaAsync(List<String> values) {
        return fetchAsync(UiAjax.UI_AJAX.CRITERIA,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(UiAjax.UI_AJAX.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(UiAjax.UI_AJAX.SIGMA,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(UiAjax.UI_AJAX.METADATA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(UiAjax.UI_AJAX.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(UiAjax.UI_AJAX.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(UiAjax.UI_AJAX.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(UiAjax.UI_AJAX.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.UiAjax>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(UiAjax.UI_AJAX.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
