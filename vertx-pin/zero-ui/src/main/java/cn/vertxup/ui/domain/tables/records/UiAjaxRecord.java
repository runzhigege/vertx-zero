/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ui.domain.tables.records;


import cn.vertxup.ui.domain.tables.UiAjax;
import cn.vertxup.ui.domain.tables.interfaces.IUiAjax;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UiAjaxRecord extends UpdatableRecordImpl<UiAjaxRecord> implements Record17<String, String, String, String, Boolean, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String>, IUiAjax {

    private static final long serialVersionUID = -46333069;

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.KEY</code>. 「key」- 主键
     */
    @Override
    public UiAjaxRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.KEY</code>. 「key」- 主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.NAME</code>. 「name」- Ajax的名称，生成ajaxKey专用
     */
    @Override
    public UiAjaxRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.NAME</code>. 「name」- Ajax的名称，生成ajaxKey专用
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.URI</code>. 「uri」- 后端接口的URI地址
     */
    @Override
    public UiAjaxRecord setUri(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.URI</code>. 「uri」- 后端接口的URI地址
     */
    @Override
    public String getUri() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.METHOD</code>. 「method」- 当前Ajax的HTTP方法
     */
    @Override
    public UiAjaxRecord setMethod(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.METHOD</code>. 「method」- 当前Ajax的HTTP方法
     */
    @Override
    public String getMethod() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.QUERY</code>. 「query」- 是否query类型的接口
     */
    @Override
    public UiAjaxRecord setQuery(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.QUERY</code>. 「query」- 是否query类型的接口
     */
    @Override
    public Boolean getQuery() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.PROJECTION</code>. 「projection」- query = true 生效
     */
    @Override
    public UiAjaxRecord setProjection(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.PROJECTION</code>. 「projection」- query = true 生效
     */
    @Override
    public String getProjection() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.PAGER</code>. 「pager」- query = true 生效
     */
    @Override
    public UiAjaxRecord setPager(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.PAGER</code>. 「pager」- query = true 生效
     */
    @Override
    public String getPager() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.SORTER</code>. 「sorter」- query = true 生效
     */
    @Override
    public UiAjaxRecord setSorter(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.SORTER</code>. 「sorter」- query = true 生效
     */
    @Override
    public String getSorter() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.CRITERIA</code>. 「criteria」- query = true则位于 query之下特殊节点，query = false则直接存储 query值
     */
    @Override
    public UiAjaxRecord setCriteria(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.CRITERIA</code>. 「criteria」- query = true则位于 query之下特殊节点，query = false则直接存储 query值
     */
    @Override
    public String getCriteria() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public UiAjaxRecord setActive(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public UiAjaxRecord setSigma(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public UiAjaxRecord setMetadata(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public UiAjaxRecord setLanguage(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public UiAjaxRecord setCreatedAt(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public UiAjaxRecord setCreatedBy(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public UiAjaxRecord setUpdatedAt(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_AJAX.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public UiAjaxRecord setUpdatedBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_AJAX.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<String, String, String, String, Boolean, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<String, String, String, String, Boolean, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row17) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return UiAjax.UI_AJAX.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return UiAjax.UI_AJAX.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return UiAjax.UI_AJAX.URI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return UiAjax.UI_AJAX.METHOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return UiAjax.UI_AJAX.QUERY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return UiAjax.UI_AJAX.PROJECTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return UiAjax.UI_AJAX.PAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return UiAjax.UI_AJAX.SORTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return UiAjax.UI_AJAX.CRITERIA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field10() {
        return UiAjax.UI_AJAX.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return UiAjax.UI_AJAX.SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return UiAjax.UI_AJAX.METADATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return UiAjax.UI_AJAX.LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field14() {
        return UiAjax.UI_AJAX.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return UiAjax.UI_AJAX.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field16() {
        return UiAjax.UI_AJAX.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return UiAjax.UI_AJAX.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getUri();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getMethod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getQuery();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getProjection();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getPager();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getSorter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getCriteria();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component10() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component14() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component16() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getUri();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getMethod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getQuery();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getProjection();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getPager();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getSorter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getCriteria();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value10() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value14() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value16() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value1(String value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value3(String value) {
        setUri(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value4(String value) {
        setMethod(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value5(Boolean value) {
        setQuery(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value6(String value) {
        setProjection(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value7(String value) {
        setPager(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value8(String value) {
        setSorter(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value9(String value) {
        setCriteria(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value10(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value11(String value) {
        setSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value12(String value) {
        setMetadata(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value13(String value) {
        setLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value14(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value15(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value16(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord value17(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiAjaxRecord values(String value1, String value2, String value3, String value4, Boolean value5, String value6, String value7, String value8, String value9, Boolean value10, String value11, String value12, String value13, LocalDateTime value14, String value15, LocalDateTime value16, String value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IUiAjax from) {
        setKey(from.getKey());
        setName(from.getName());
        setUri(from.getUri());
        setMethod(from.getMethod());
        setQuery(from.getQuery());
        setProjection(from.getProjection());
        setPager(from.getPager());
        setSorter(from.getSorter());
        setCriteria(from.getCriteria());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IUiAjax> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UiAjaxRecord
     */
    public UiAjaxRecord() {
        super(UiAjax.UI_AJAX);
    }

    /**
     * Create a detached, initialised UiAjaxRecord
     */
    public UiAjaxRecord(String key, String name, String uri, String method, Boolean query, String projection, String pager, String sorter, String criteria, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(UiAjax.UI_AJAX);

        set(0, key);
        set(1, name);
        set(2, uri);
        set(3, method);
        set(4, query);
        set(5, projection);
        set(6, pager);
        set(7, sorter);
        set(8, criteria);
        set(9, active);
        set(10, sigma);
        set(11, metadata);
        set(12, language);
        set(13, createdAt);
        set(14, createdBy);
        set(15, updatedAt);
        set(16, updatedBy);
    }
}
