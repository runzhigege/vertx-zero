/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ui.tables.pojos;


import cn.vertxup.ui.tables.interfaces.IUiControl;

import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UiControl implements IUiControl {

    private static final long serialVersionUID = -957927990;

    private String        key;
    private String        containerName;
    private String        containerConfig;
    private String        componentName;
    private String        componentData;
    private String        componentConfig;
    private String        dataEvent;
    private String        dataMapping;
    private String        dataMagic;
    private String        sign;
    private String        pageId;
    private Boolean       active;
    private String        sigma;
    private String        metadata;
    private String        language;
    private LocalDateTime createdAt;
    private String        createdBy;
    private LocalDateTime updatedAt;
    private String        updatedBy;

    public UiControl() {}

    public UiControl(UiControl value) {
        this.key = value.key;
        this.containerName = value.containerName;
        this.containerConfig = value.containerConfig;
        this.componentName = value.componentName;
        this.componentData = value.componentData;
        this.componentConfig = value.componentConfig;
        this.dataEvent = value.dataEvent;
        this.dataMapping = value.dataMapping;
        this.dataMagic = value.dataMagic;
        this.sign = value.sign;
        this.pageId = value.pageId;
        this.active = value.active;
        this.sigma = value.sigma;
        this.metadata = value.metadata;
        this.language = value.language;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
    }

    public UiControl(
        String        key,
        String        containerName,
        String        containerConfig,
        String        componentName,
        String        componentData,
        String        componentConfig,
        String        dataEvent,
        String        dataMapping,
        String        dataMagic,
        String        sign,
        String        pageId,
        Boolean       active,
        String        sigma,
        String        metadata,
        String        language,
        LocalDateTime createdAt,
        String        createdBy,
        LocalDateTime updatedAt,
        String        updatedBy
    ) {
        this.key = key;
        this.containerName = containerName;
        this.containerConfig = containerConfig;
        this.componentName = componentName;
        this.componentData = componentData;
        this.componentConfig = componentConfig;
        this.dataEvent = dataEvent;
        this.dataMapping = dataMapping;
        this.dataMagic = dataMagic;
        this.sign = sign;
        this.pageId = pageId;
        this.active = active;
        this.sigma = sigma;
        this.metadata = metadata;
        this.language = language;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

    @Override
    public String getKey() {
        return this.key;
    }

    @Override
    public UiControl setKey(String key) {
        this.key = key;
        return this;
    }

    @Override
    public String getContainerName() {
        return this.containerName;
    }

    @Override
    public UiControl setContainerName(String containerName) {
        this.containerName = containerName;
        return this;
    }

    @Override
    public String getContainerConfig() {
        return this.containerConfig;
    }

    @Override
    public UiControl setContainerConfig(String containerConfig) {
        this.containerConfig = containerConfig;
        return this;
    }

    @Override
    public String getComponentName() {
        return this.componentName;
    }

    @Override
    public UiControl setComponentName(String componentName) {
        this.componentName = componentName;
        return this;
    }

    @Override
    public String getComponentData() {
        return this.componentData;
    }

    @Override
    public UiControl setComponentData(String componentData) {
        this.componentData = componentData;
        return this;
    }

    @Override
    public String getComponentConfig() {
        return this.componentConfig;
    }

    @Override
    public UiControl setComponentConfig(String componentConfig) {
        this.componentConfig = componentConfig;
        return this;
    }

    @Override
    public String getDataEvent() {
        return this.dataEvent;
    }

    @Override
    public UiControl setDataEvent(String dataEvent) {
        this.dataEvent = dataEvent;
        return this;
    }

    @Override
    public String getDataMapping() {
        return this.dataMapping;
    }

    @Override
    public UiControl setDataMapping(String dataMapping) {
        this.dataMapping = dataMapping;
        return this;
    }

    @Override
    public String getDataMagic() {
        return this.dataMagic;
    }

    @Override
    public UiControl setDataMagic(String dataMagic) {
        this.dataMagic = dataMagic;
        return this;
    }

    @Override
    public String getSign() {
        return this.sign;
    }

    @Override
    public UiControl setSign(String sign) {
        this.sign = sign;
        return this;
    }

    @Override
    public String getPageId() {
        return this.pageId;
    }

    @Override
    public UiControl setPageId(String pageId) {
        this.pageId = pageId;
        return this;
    }

    @Override
    public Boolean getActive() {
        return this.active;
    }

    @Override
    public UiControl setActive(Boolean active) {
        this.active = active;
        return this;
    }

    @Override
    public String getSigma() {
        return this.sigma;
    }

    @Override
    public UiControl setSigma(String sigma) {
        this.sigma = sigma;
        return this;
    }

    @Override
    public String getMetadata() {
        return this.metadata;
    }

    @Override
    public UiControl setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    @Override
    public String getLanguage() {
        return this.language;
    }

    @Override
    public UiControl setLanguage(String language) {
        this.language = language;
        return this;
    }

    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    @Override
    public UiControl setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    @Override
    public UiControl setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    @Override
    public UiControl setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    @Override
    public UiControl setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UiControl (");

        sb.append(key);
        sb.append(", ").append(containerName);
        sb.append(", ").append(containerConfig);
        sb.append(", ").append(componentName);
        sb.append(", ").append(componentData);
        sb.append(", ").append(componentConfig);
        sb.append(", ").append(dataEvent);
        sb.append(", ").append(dataMapping);
        sb.append(", ").append(dataMagic);
        sb.append(", ").append(sign);
        sb.append(", ").append(pageId);
        sb.append(", ").append(active);
        sb.append(", ").append(sigma);
        sb.append(", ").append(metadata);
        sb.append(", ").append(language);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IUiControl from) {
        setKey(from.getKey());
        setContainerName(from.getContainerName());
        setContainerConfig(from.getContainerConfig());
        setComponentName(from.getComponentName());
        setComponentData(from.getComponentData());
        setComponentConfig(from.getComponentConfig());
        setDataEvent(from.getDataEvent());
        setDataMapping(from.getDataMapping());
        setDataMagic(from.getDataMagic());
        setSign(from.getSign());
        setPageId(from.getPageId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IUiControl> E into(E into) {
        into.from(this);
        return into;
    }

    public UiControl(io.vertx.core.json.JsonObject json) {
        fromJson(json);
    }
}
